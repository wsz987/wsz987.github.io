<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/01/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>ES6 简洁好用的写法 笔记</title>
    <url>/2021/01/31/JavaScript/ES6/</url>
    <content><![CDATA[<p><strong>摘抄至</strong> <a href="https://zhuanlan.zhihu.com/p/24350862">知乎文章</a>   部分笔记</p>
<h4 id="从数组中获取元素"><a href="#从数组中获取元素" class="headerlink" title="从数组中获取元素"></a>从数组中获取元素</h4><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES5</span><br><span class="line">var array = [1, 2, 3, 4];</span><br><span class="line">var first = array[0];</span><br><span class="line">var third = array[2];</span><br><span class="line">console.log(first, third); // 1 3</span><br></pre></td></tr></table></figure>
<p>等同于：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">const array = [1, 2, 3, 4];</span><br><span class="line">const [first, ,third] = array;</span><br><span class="line">console.log(first, third); // 1 3</span><br></pre></td></tr></table></figure>
<hr>
<a id="more"></a>

<h4 id="交换值"><a href="#交换值" class="headerlink" title="交换值"></a>交换值</h4><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES5</span><br><span class="line">var a = 1;</span><br><span class="line">var b = 2;</span><br><span class="line">var tmp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tmp;</span><br><span class="line">console.log(a, b); // 2 1</span><br></pre></td></tr></table></figure>
<p>等同于：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES6</span><br><span class="line">let a = 1;</span><br><span class="line">let b = 2;</span><br><span class="line">[a, b] = [b, a];</span><br><span class="line">console.log(a, b); // 2 1</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h4><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES5</span><br><span class="line">function point(x, y, isFlag)&#123;</span><br><span class="line">  x = x || 0;</span><br><span class="line">  y = y || -1;</span><br><span class="line">  isFlag = isFlag || true;</span><br><span class="line">  console.log(x,y, isFlag);</span><br><span class="line">&#125;</span><br><span class="line">point(0, 0) // 0 -1 true ?</span><br><span class="line">point(0, 0, false) // 0 -1 true ??</span><br><span class="line">point(1) // 1 -1 true</span><br><span class="line">point() // 0 -1 true</span><br></pre></td></tr></table></figure>
<p><strong>Why?</strong> </p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES5</span><br><span class="line">function point(x, y, isFlag)&#123;</span><br><span class="line">  x = x || 0;</span><br><span class="line">  y = typeof(y) === &#x27;undefined&#x27; ? -1 : y;</span><br><span class="line">  isFlag = typeof(isFlag) === &#x27;undefined&#x27; ? true : isFlag;</span><br><span class="line">  console.log(x,y, isFlag);</span><br><span class="line">&#125;</span><br><span class="line">point(0, 0) // 0 0 true</span><br><span class="line">point(0, 0, false) // 0 0 false</span><br><span class="line">point(1) // 1 -1 true</span><br><span class="line">point() // 0 -1 true</span><br></pre></td></tr></table></figure>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES6</span><br><span class="line">function point(x = 0, y = -1, isFlag = true)&#123;</span><br><span class="line">  console.log(x,y, isFlag);</span><br><span class="line">&#125;</span><br><span class="line">point(0, 0) // 0 0 true</span><br><span class="line">point(0, 0, false) // 0 0 false</span><br><span class="line">point(1) // 1 -1 true</span><br><span class="line">point() // 0 -1 true</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="多个返回值的结构"><a href="#多个返回值的结构" class="headerlink" title="多个返回值的结构"></a>多个返回值的结构</h4><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES5</span><br><span class="line">function margin() &#123;</span><br><span class="line">  var left=1, right=2, top=3, bottom=4;</span><br><span class="line">  return &#123; left: left, right: right, top: top, bottom: bottom &#125;;</span><br><span class="line">&#125;</span><br><span class="line">var data = margin();</span><br><span class="line">var left = data.left;</span><br><span class="line">var bottom = data.bottom;</span><br><span class="line">console.log(left, bottom); // 1 4</span><br></pre></td></tr></table></figure>
<p>在第 3 行中，你也可以用一个像这样的数组返回（同时省去了一些编码）：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">return [left, right, top, bottom];</span><br></pre></td></tr></table></figure>
<p>但另一方面，调用者需要考虑返回数据的顺序。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">var left = data[0];</span><br><span class="line">var bottom = data[3];</span><br></pre></td></tr></table></figure>
<p>用 ES6，调用者只需选择他们需要的数据即可（第 6 行）：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES6</span><br><span class="line"></span><br><span class="line">function margin() &#123;</span><br><span class="line">  const left=1, right=2, top=3, bottom=4;</span><br><span class="line">  return &#123; left, right, top, bottom &#125;;</span><br><span class="line">&#125;</span><br><span class="line">const &#123; left, bottom &#125; = margin();</span><br><span class="line">console.log(left, bottom); // 1 4</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="参数匹配的结构"><a href="#参数匹配的结构" class="headerlink" title="参数匹配的结构"></a>参数匹配的结构</h4><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES5</span><br><span class="line">var user = &#123;firstName: &#x27;Adrian&#x27;, lastName: &#x27;Mejia&#x27;&#125;;</span><br><span class="line">function getFullName(user) &#123;</span><br><span class="line">  var firstName = user.firstName;</span><br><span class="line">  var lastName = user.lastName;</span><br><span class="line">  return firstName + &#x27; &#x27; + lastName;</span><br><span class="line">&#125;</span><br><span class="line">console.log(getFullName(user)); // Adrian Mejia</span><br></pre></td></tr></table></figure>
<p>等同于（但更简洁）：<strong>注意 ({ firstName, lastName })写法</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">// ES6</span><br><span class="line">const user = &#123;firstName: &#x27;Adrian&#x27;, lastName: &#x27;Mejia&#x27;&#125;;</span><br><span class="line">function getFullName(&#123; firstName, lastName &#125;) &#123;</span><br><span class="line">  return `$&#123;firstName&#125; $&#123;lastName&#125;`;</span><br><span class="line">&#125;</span><br><span class="line">console.log(getFullName(user)); // Adrian Mejia</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>JavaScript</tag>
        <tag>ES6</tag>
      </tags>
  </entry>
  <entry>
    <title>bilibili-info</title>
    <url>/2021/01/31/bilibili-info/</url>
    <content><![CDATA[<h4 id="搜索结果接口"><a href="#搜索结果接口" class="headerlink" title="搜索结果接口"></a>搜索结果接口</h4><p><a href="https://api.bilibili.com/x/web-interface/search/all/v2?keyword=%E5%92%92%E6%9C%AF%E5%9B%9E%E6%88%98&amp;func=suggest">https://api.bilibili.com/x/web-interface/search/all/v2?keyword=咒术回战&amp;func=suggest</a></p>
<p>[^data.result[3]]: result_type: “media_bangumi “番剧信息<br>[^data.result[3].data[0].eps]: 集数页面地址</p>
<h4 id="搜索结果预览"><a href="#搜索结果预览" class="headerlink" title="搜索结果预览"></a>搜索结果预览</h4><p><a href="https://s.search.bilibili.com/main/suggest?term=%E5%A5%BD">https://s.search.bilibili.com/main/suggest?term=好</a></p>
<p>spid=8 番剧</p>
]]></content>
      <categories>
        <category>Bilibili</category>
      </categories>
  </entry>
  <entry>
    <title>forEach for...in for...of 遍历</title>
    <url>/2021/01/31/JavaScript/for-Each-in-of/</url>
    <content><![CDATA[<blockquote>
<p>v-for=”( item, key, index ) in Object”</p>
<p>Object.keys(obj) 获取键值  </p>
</blockquote>
<h4 id="forEach-val-index-不改变原数组"><a href="#forEach-val-index-不改变原数组" class="headerlink" title="forEach(val, index) 不改变原数组"></a>forEach(val, index) 不改变原数组</h4><h4 id="for…in-遍历Object的键值"><a href="#for…in-遍历Object的键值" class="headerlink" title="for…in 遍历Object的键值"></a>for…in 遍历Object的键值</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">a</span>: <span class="string">&#x27;1&#x27;</span>, <span class="attr">b</span>: <span class="string">&#x27;2&#x27;</span>, <span class="attr">c</span>: <span class="string">&#x27;3&#x27;</span>, <span class="attr">d</span>: <span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> o <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o)    <span class="comment">//遍历的实际上是对象的属性名称 a,b,c,d</span></span><br><span class="line">    <span class="built_in">console</span>.log(obj[o])  <span class="comment">//这个才是属性对应的值1，2，3，4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="for…of-ES6"><a href="#for…of-ES6" class="headerlink" title="for…of  (ES6)"></a>for…of  (ES6)</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;China&#x27;</span>, <span class="string">&#x27;America&#x27;</span>, <span class="string">&#x27;Korea&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> o <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o) <span class="comment">//China, America, Korea</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<p><strong>直接遍历对象 (error)</strong></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="variable">a:</span> <span class="string">&#x27;1&#x27;</span>, <span class="variable">b:</span> <span class="string">&#x27;2&#x27;</span>, <span class="keyword">c</span>: <span class="string">&#x27;3&#x27;</span>, d: <span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> <span class="keyword">o</span> of obj) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="keyword">o</span>)   //Uncaught TypeError: obj[Symbol.iterator] <span class="keyword">is</span> not <span class="keyword">a</span> <span class="function"><span class="keyword">function</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>字符串</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;love&#x27;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> o <span class="keyword">of</span> str) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o) <span class="comment">// l,o,v,e</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Object.key()</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">a</span>: <span class="string">&#x27;1&#x27;</span>, <span class="attr">b</span>: <span class="string">&#x27;2&#x27;</span>, <span class="attr">c</span>: <span class="string">&#x27;3&#x27;</span>, <span class="attr">d</span>: <span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> o <span class="keyword">of</span> <span class="built_in">Object</span>.keys(obj)) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o) <span class="comment">// a,b,c,d</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Object.values()</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">a</span>: <span class="string">&#x27;1&#x27;</span>, <span class="attr">b</span>: <span class="string">&#x27;2&#x27;</span>, <span class="attr">c</span>: <span class="string">&#x27;3&#x27;</span>, <span class="attr">d</span>: <span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> o <span class="keyword">of</span> <span class="built_in">Object</span>.values(obj)) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o) <span class="comment">// 1,2,3,4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>new Map()</strong></p>
<blockquote>
<p>new Map([[key,value],[key,value]])</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> iterable = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">&quot;a&quot;</span>, <span class="number">1</span>], [<span class="string">&quot;b&quot;</span>, <span class="number">2</span>], [<span class="string">&quot;c&quot;</span>, <span class="number">3</span>]]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> [key, value] <span class="keyword">of</span> iterable) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> entry <span class="keyword">of</span> iterable) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(entry);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [a, 1]</span></span><br><span class="line"><span class="comment">// [b, 2]</span></span><br><span class="line"><span class="comment">// [c, 3]</span></span><br></pre></td></tr></table></figure>
<p><strong>new Set()</strong></p>
<blockquote>
<p><strong>类似于数组</strong>，但它<strong>所有元素都是唯一的</strong></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> iterable = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> iterable) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>JavaScript</tag>
        <tag>ES6</tag>
        <tag>遍历</tag>
        <tag>对象</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>纯JS鼠标点击显示文字特效</title>
    <url>/2021/01/29/JavaScript/mouseClickShowText/</url>
    <content><![CDATA[<h4 id="Hexo-next主题添加鼠标点击特效"><a href="#Hexo-next主题添加鼠标点击特效" class="headerlink" title="Hexo next主题添加鼠标点击特效"></a>Hexo next主题添加鼠标点击特效</h4><blockquote>
<p>JS代码转载至 <a href="https://blog.csdn.net/weilongjj/article/details/101039813">原生js实现鼠标点击出现文字特效（颜色随机）！</a> </p>
<p><em>内容仅作学习!  文字底部版权不知道怎么关掉,望见谅……   此篇为转载 + 本人笔记性质</em></p>
<blockquote>
<p><code>themes\next\layout\_layout.swig</code>  <head> 或 <body>中添加</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/click_show_text.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>themes\next\source\js</code> 下新建 <code>click_show_text.js</code>  添加如下: </p>
<p><em>原代码并未添加闭包  本人建议且已添加闭包~~</em></p>
</blockquote>
</blockquote>
<a id="more"></a>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">	<span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="comment">//定义点击出现文字类</span></span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">ClickFrontShow</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">			<span class="comment">//定义所需文字和颜色</span></span><br><span class="line">			<span class="built_in">this</span>.fron = [ <span class="string">&#x27;❤&#x27;</span>, <span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span>, <span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>];</span><br><span class="line">			<span class="built_in">this</span>.colo = [<span class="string">&#x27;#FF69B4&#x27;</span>, <span class="string">&#x27;#ff6651&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;#FF00FF&#x27;</span>, <span class="string">&#x27;#00FF7F&#x27;</span>, <span class="string">&#x27;#00BFFF&#x27;</span>, <span class="string">&#x27;#BA55D3&#x27;</span>];</span><br><span class="line">			<span class="comment">//获取body元素</span></span><br><span class="line">			<span class="built_in">this</span>.elBody = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">			<span class="comment">//初始化randomNum</span></span><br><span class="line">			<span class="built_in">this</span>.randomNum = <span class="literal">null</span>;</span><br><span class="line">			<span class="comment">//初始化字体inde</span></span><br><span class="line">			<span class="built_in">this</span>.finde = <span class="number">0</span>;</span><br><span class="line">			<span class="comment">//初始化className</span></span><br><span class="line">			<span class="built_in">this</span>.cls = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//定义初始化</span></span><br><span class="line">		ClickFrontShow.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params">frontArray, colorArray</span>) </span>&#123;</span><br><span class="line">			<span class="comment">//自定义颜色和字体</span></span><br><span class="line">			<span class="built_in">this</span>.fron = frontArray || <span class="built_in">this</span>.fron;</span><br><span class="line">			<span class="built_in">this</span>.colo = colorArray || <span class="built_in">this</span>.colo;</span><br><span class="line">			</span><br><span class="line">			<span class="built_in">this</span>.listenMouse();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建文字 </span></span><br><span class="line">		ClickFrontShow.prototype.createFront = <span class="function"><span class="keyword">function</span> (<span class="params">classname</span>) </span>&#123;</span><br><span class="line">			<span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">			<span class="keyword">let</span> ospan = <span class="built_in">document</span>.createElement(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">			<span class="comment">//设置样式</span></span><br><span class="line">			<span class="keyword">let</span> cssText = <span class="string">&quot;position:absolute; width: 40px; height: 20px; cursor: default; transform: translate(-50%,-50%); font-weight: bold; opacity: 1; z-index: 1000; transition: 1s;&quot;</span>;</span><br><span class="line">			<span class="comment">//随机字体和颜色</span></span><br><span class="line">			<span class="keyword">let</span> randomFront = self.fron[self.finde];</span><br><span class="line">			<span class="keyword">let</span> randomColor = self.colo[<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*(self.colo.length-<span class="number">1</span>))];</span><br><span class="line">			<span class="comment">//字体下标增1</span></span><br><span class="line">			self.finde = (self.finde+<span class="number">1</span>) % self.fron.length;</span><br><span class="line">			<span class="comment">//向body中添加元素</span></span><br><span class="line">			self.elBody.appendChild(ospan);</span><br><span class="line">			<span class="comment">//绑定一个classname</span></span><br><span class="line">			ospan.className = <span class="built_in">String</span>(classname);</span><br><span class="line">			<span class="comment">//添加样式</span></span><br><span class="line">			ospan.style.cssText = cssText + <span class="string">&quot;-moz-user-select: none;-webkit-user-select: none;-ms-user-select: none;user-select: none;&quot;</span></span><br><span class="line">			ospan.style.color = randomColor;</span><br><span class="line">			ospan.innerHTML = randomFront;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//监听鼠标点击</span></span><br><span class="line">		ClickFrontShow.prototype.listenMouse = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">			<span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">	</span><br><span class="line">			<span class="comment">//鼠标点击事件</span></span><br><span class="line">			<span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">				<span class="comment">//避免classname值重复导致出现bug</span></span><br><span class="line">				<span class="keyword">if</span>(self.cls === <span class="number">20</span>)&#123;</span><br><span class="line">					self.cls = <span class="number">0</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					self.cls += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">//创建文字</span></span><br><span class="line">				self.createFront(self.cls);</span><br><span class="line">				<span class="keyword">let</span> el = <span class="built_in">document</span>.getElementsByClassName(self.cls)[<span class="number">0</span>];</span><br><span class="line">				</span><br><span class="line">				<span class="comment">//鼠标点击位置</span></span><br><span class="line">				el.style.left = e.clientX + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">				el.style.top = e.clientY + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">				</span><br><span class="line">				<span class="comment">//过时改变</span></span><br><span class="line">				<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">					el.style.opacity = <span class="number">0</span>;</span><br><span class="line">					el.style.top = el.offsetTop - <span class="number">100</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">				&#125;, <span class="number">100</span>);</span><br><span class="line">				<span class="comment">//过时清除</span></span><br><span class="line">				<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">					self.elBody.removeChild(el);</span><br><span class="line">				&#125;, <span class="number">2000</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//实例化</span></span><br><span class="line">		<span class="keyword">var</span> frontShow = <span class="keyword">new</span> ClickFrontShow();</span><br><span class="line">		<span class="comment">//用户可在此传递参数，默认第一个参数是字体数组；</span></span><br><span class="line">		<span class="comment">//第二个参数是颜色数组，必须是数组类型！</span></span><br><span class="line">		frontShow.init();</span><br><span class="line">	 &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>JavaScript</tag>
        <tag>特效</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next 引入live2d 博客板娘</title>
    <url>/2021/01/30/hexo/2Dlive/</url>
    <content><![CDATA[<h4 id="live2D-博客板娘"><a href="#live2D-博客板娘" class="headerlink" title="live2D 博客板娘"></a>live2D 博客板娘</h4><p>Github 大佬仓库 <a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a></p>
<ol>
<li><p>最简单CDN导入(功能限制太多)</p>
<blockquote>
<p>到布局文件 <code>themes\next\layout\_layout.swig</code>  <head>中 手动引入</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
</li>
<li><p>本地配置 (功能齐全)</p>
</li>
</ol>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>@github.com:stevenjoezhang/live2d-widget.git</span><br></pre></td></tr></table></figure>
<p>下载后将 文件夹改名 <code>live2d-widget</code> 并拉到<code>themes\next\source\js</code>目录下</p>
<p>打开<code>themes\next\source\live2d-widget\autoload.js</code></p>
<p><strong>注释掉</strong>  <del>const live2d_path = “<a href="https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;">https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;</a>;</del></p>
<p><strong>取消</strong>  <code>const live2d_path = &quot;/live2d-widget/&quot;;</code>  <strong>注释</strong>  或手动改路径<code>/live2d-widget/</code></p>
<p>到布局文件 <code>themes\next\layout\_layout.swig</code>  <head>中 手动引入</p>
<script src="/live2d-widget/autoload.js"></script>

<p>即可 预览效果</p>
<p>如需改变样式 布局 到<code>themes\next\source\live2d-widget\waifu.css</code></p>
<p>找到 <code>left: 0</code> 改为 <code>right: 0;</code>  即可实现 右下角布局</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#waifu</span> &#123;</span><br><span class="line">	<span class="attribute">bottom</span>: -<span class="number">1000px</span>;</span><br><span class="line">	<span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">margin-bottom</span>: -<span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">position</span>: fixed;</span><br><span class="line">	<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">3px</span>);</span><br><span class="line">	<span class="attribute">transition</span>: transform .<span class="number">3s</span> ease-in-out, bottom <span class="number">3s</span> ease-in-out;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>记得将 默认 <code>right: -10px;</code>改为 <code>left: -10px;</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#waifu-tool</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#aaa</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">left</span>: -<span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">top</span>: <span class="number">70px</span>;</span><br><span class="line">	<span class="attribute">transition</span>: opacity <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>板娘</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 新版next 文章版权启用</title>
    <url>/2021/01/29/hexo/copyright/</url>
    <content><![CDATA[<p>前言: 网上找到的老版 版权开启方法不起作用</p>
<p><code>themes\next\layout\_macro\post.swig</code> / 文章开头 设置 <code>copyright: true </code> 不起作用</p>
<p>实际新版next内置了版权信息模块<br>有两种启用模式 效果不一</p>
<a id="more"></a>

<h5 id="方法一-全局开启"><a href="#方法一-全局开启" class="headerlink" title="方法一  全局开启"></a>方法一  全局开启</h5><blockquote>
<p><code>themes\next\_config.yml</code>  下 <code>sidebar</code> 和  <code>post</code> 设置为true  </p>
<blockquote>
<p>sidebar为头像模块显示版权保护</p>
<p>post 则为文章底部版权模块</p>
</blockquote>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>themes\next\layout\_macro\post.swig</code>下搜索<code>creative_commons</code>可见</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml">&#123;%- if theme.creative_commons.license and theme.creative_commons.post %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; <span class="name"><span class="builtin-name">partial</span></span>(<span class="name">&#x27;_partials/post/post-copyright.swig&#x27;</span>) &#125;&#125;</span></span><br><span class="line"><span class="xml">&#123;%- endif %&#125;</span></span><br></pre></td></tr></table></figure>

<p>本人认知限制 一旦开启则为全局 无法单页面关闭  这样很不方便 </p>
</blockquote>
<h5 id="方法二-单页面灵活设置"><a href="#方法二-单页面灵活设置" class="headerlink" title="方法二 单页面灵活设置"></a>方法二 单页面灵活设置</h5><blockquote>
<p>在上文</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml">&#123;%- if theme.creative_commons.license and theme.creative_commons.post %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; <span class="name"><span class="builtin-name">partial</span></span>(<span class="name">&#x27;_partials/post/post-copyright.swig&#x27;</span>) &#125;&#125;</span></span><br><span class="line"><span class="xml">&#123;%- endif %&#125;</span></span><br></pre></td></tr></table></figure>

<p>上或下区域 添加</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml">&#123;%- if page.copyright %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; <span class="name"><span class="builtin-name">partial</span></span>(<span class="name">&#x27;_partials/post/post-copyright.swig&#x27;</span>) &#125;&#125;</span></span><br><span class="line"><span class="xml">&#123;%- endif %&#125;</span></span><br></pre></td></tr></table></figure>

<p><del>回到<code>themes\next\layout\_macro\post.swig</code> 搜索 <code>copyright</code> 设置为</del>    (误解了  实际测试不需要设置 )</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">copyright:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>此后只需要在<code>*.md</code>文章开头添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">hexo</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">hexo</span> <span class="string">新版nest</span> <span class="string">文章版权启用</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-01-29 10:18:26</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">nest</span> </span><br><span class="line"><span class="attr">tags:</span> [<span class="string">hexo</span>,<span class="string">copyright</span>]</span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>则实现文章底部灵活开启版权模块</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>copyright</tag>
      </tags>
  </entry>
  <entry>
    <title>饰品筛选倒余额脚本</title>
    <url>/2021/01/29/script/SteamBuff_Market-WalletBalance/</url>
    <content><![CDATA[<h5 id="反馈"><a href="#反馈" class="headerlink" title="反馈"></a>反馈</h5><blockquote>
<p> <a href="https://keylol.com/t577669-1-1">饰品筛选倒余额 (Keylol论坛)</a> </p>
</blockquote>
<h5 id="适配"><a href="#适配" class="headerlink" title="适配"></a>适配</h5><blockquote>
<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="https://buff.163.com/">Buff</a> </li>
<li><input checked="" disabled="" type="checkbox"> <a href="https://www.igxe.cn/dota2/570?sort=3">igxe</a></li>
<li><input disabled="" type="checkbox"> c5game<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="https//www.c5game.com/dota.html">dota</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="https://www.c5game.com/csgo/default/result.html?sort=update_time">csgo</a></li>
</ul>
</li>
</ul>
</blockquote>
<a id="more"></a>

<h5 id="技术描述"><a href="#技术描述" class="headerlink" title="技术描述"></a>技术描述</h5><blockquote>
<p>面板模块采用 <code>Vue</code> 实现数据交互 </p>
<p>筛选机制由 <code>JQury</code> 实现 <code>DOM</code> 操作 及动态组件加载</p>
<p><code>ES6</code> 使用 <code>let</code> , <code>const</code> , <code>includes</code> , <code>new Promise()</code> , <code>Array.from().filter(()=&gt;&#123;&#125;)</code> , <code>async-await</code>/<code>then()</code> <strong>等</strong></p>
<p><code>Bootstrap4</code> 相关 <code>CSS</code> 引用 <strong>微调</strong>兼容各网站页面样式</p>
<p>接收键盘指令<code>Keyboard</code> 自动筛选</p>
</blockquote>
<blockquote>
<p>兼容 <code>Edge</code> <code>Chrome</code> <code>Firefox(略丑)</code></p>
<ul>
<li><a href="https://www.igxe.cn/dota2/570?sort=3">igxe</a>有显示BUG</li>
<li>c5game由于页面地址混乱只适配<a href="https://www.c5game.com/dota.html">dota</a>/<a href="https://www.c5game.com/csgo/default/result.html?sort=update_time">csgo</a></li>
</ul>
</blockquote>
<h5 id="脚本使用"><a href="#脚本使用" class="headerlink" title="脚本使用"></a>脚本使用</h5><blockquote>
<ul>
<li>脚本基于 <a href="http://www.tampermonkey.net/">Tampermonkey 油猴</a></li>
<li><strong>使用前需要安装</strong> <a href="https://keylol.com/suid-451341">@AFKOUT</a> 老哥的 <a href="https://greasyfork.org/zh-CN/scripts/35597-%E9%A5%B0%E5%93%81%E6%AF%94%E4%BE%8B%E8%AE%A1%E7%AE%97%E8%84%9A%E6%9C%AC">饰品比例计算脚本</a>         ⇦他的 <a href="https://keylol.com/t331397-1-1">帖子 / 反馈</a></li>
<li>我的脚本 <a href="https://greasyfork.org/zh-CN/scripts/399176-%E9%A5%B0%E5%93%81%E7%AD%9B%E9%80%89%E5%80%92%E4%BD%99%E9%A2%9D-%E6%AF%94%E4%BE%8B%E8%87%AA%E5%AE%9A%E4%B9%89-%E6%94%AF%E6%8C%81buff-c5game-igxe">饰品筛选倒余额脚本</a></li>
</ul>
</blockquote>
<h5 id="键盘指令-Keyboard"><a href="#键盘指令-Keyboard" class="headerlink" title="键盘指令  Keyboard"></a><strong>键盘指令</strong>  <code>Keyboard</code></h5><blockquote>
<p><code>A</code>  上一页<br><code>S</code>  居中且过滤<br><code>D</code>  下一页<br><code>W</code>  居中<br><code>E</code> 过滤后全部打开  <strong>需要浏览器弹窗权限</strong></p>
</blockquote>
<h5 id="疑惑解答"><a href="#疑惑解答" class="headerlink" title="* 疑惑解答 *"></a><strong>* 疑惑解答 *</strong></h5><blockquote>
<p>为什么网页打开几秒后总是自动关闭</p>
<ul>
<li>因为筛选的饰品余额比例过高</li>
</ul>
</blockquote>
<blockquote>
<p>为什么按E/D会无限下一页</p>
<ul>
<li>因为我设置了定时呀!页面没有不符合条件的饰品就下一页,直到找到嘿嘿!不然会累计到1000个被筛选触发浏览器机制停止</li>
</ul>
</blockquote>
<blockquote>
<p>为什么一次性打开多个页面后不符合条件的饰品不会自动关闭 </p>
<ul>
<li>你的网速过慢导致比例脚本数据加载过慢 筛选脚本验证超时 请给脚本设置适合自己网络的验证参数 <code>延迟筛选时间&amp;校验</code></li>
</ul>
</blockquote>
<blockquote>
<p>为什么按E后只能打开一个网页</p>
<ul>
<li>请给网页设置弹窗权限(浏览器安全问题)  第一次使用 <code>E</code> 浏览器会提示</li>
<li>选择第一个允许<br><img src="https://blob.keylol.com/forum/202005/31/213133u0i9666ff76g9ddg.png" alt="选择允许"></li>
</ul>
</blockquote>
<h5 id="筛选机制"><a href="#筛选机制" class="headerlink" title="筛选机制"></a><strong>筛选机制</strong></h5><blockquote>
<ul>
<li><p>最低在售数量  &gt;<em>避免冷门饰品</em></p>
</li>
<li><p>理想比例  &gt;<em>当前市场最低出售价比例</em></p>
</li>
<li><p>最高比例  &gt;<em>当前市场最高收购价比例</em></p>
</li>
<li><p>理想比例 </p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">&gt;不符合要求 &gt;<span class="strong">*筛选*</span> 不超过最高比例</span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 符合要求  &gt;<span class="emphasis">*筛选*</span> 不超过最高比例 (避免JS抬价造成虚假比例)</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h5 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h5><!--鼠标移到面板可以查看详细内容-->

<ul>
<li><img src="https://blob.keylol.com/forum/202008/12/232150n1kr7z75y7uzt7z1.png" alt="面板"></li>
<li><img src="https://blob.keylol.com/forum/202008/12/232200xi4oom9oasnzxm9n.png" alt="面板1"></li>
<li><img src="https://blob.keylol.com/forum/202008/12/232203m02948stksc20ajw.png" alt="面板2"></li>
<li><img src="https://blob.keylol.com/forum/202008/12/231520h44u99bjb9rrijqy.png" alt="Buff中的效果"></li>
</ul>
]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>STEAM</tag>
        <tag>脚本</tag>
        <tag>Tampermonkey</tag>
        <tag>Buff</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端点击300ms解决方案 fastClick</title>
    <url>/2021/01/31/mobile/fastClick-300ms/</url>
    <content><![CDATA[<blockquote>
<p>移动端开发，点击事件会有300ms延迟的问题</p>
</blockquote>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><a href="https://github.com/ftlabs/fastclick">Github</a></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> fastclick -S</span><br></pre></td></tr></table></figure>
<h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> FastClick <span class="keyword">from</span> <span class="string">&#x27;fastclick&#x27;</span>;</span><br><span class="line">FastClick.attach(<span class="built_in">document</span>.body);</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="什么情况不被使用"><a href="#什么情况不被使用" class="headerlink" title="什么情况不被使用"></a>什么情况不被使用</h4><ol>
<li><p>使用桌面浏览器：FastClick doesn’t attach any listeners on desktop browsers.</p>
</li>
<li><p>在安卓 Chrome 32+ 上添加 如下</p>
<blockquote>
<p>  <code>width=device-width</code> doesn’t have a 300ms delay, therefore listeners aren’t attached.</p>
  <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attribute">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br></pre></td></tr></table></figure></blockquote>
</li>
<li><p>安卓上的Chrome (all versions)  <code>&lt;meta&gt;</code> 中带有 <code>user-scalable=no</code></p>
<blockquote>
<p>注意 <code>user-scalable=no</code>会禁用捏缩放，这可能是可访问性问题。which may be an accessibility concern.</p>
</blockquote>
</li>
</ol>
<h4 id="其他使用"><a href="#其他使用" class="headerlink" title="其他使用"></a>其他使用</h4><p>HTML </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&#x27;application/javascript&#x27;</span> <span class="attr">src</span>=<span class="string">&#x27;/path/to/fastclick.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>推荐使用方法</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;addEventListener&#x27;</span> <span class="keyword">in</span> <span class="built_in">document</span>) &#123;</span><br><span class="line">	<span class="built_in">document</span>.addEventListeneraddEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		FastClick.attach(<span class="built_in">document</span>.body);</span><br><span class="line">	&#125;, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>jQuery</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	FastClick.attach(<span class="built_in">document</span>.body);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><strong>其他工程化项目导入</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> attachFastClick = <span class="built_in">require</span>(<span class="string">&#x27;fastclick&#x27;</span>);</span><br><span class="line">attachFastClick(<span class="built_in">document</span>.body);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>移动端</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>uniapp</tag>
        <tag>fastClick</tag>
        <tag>移动端</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam商店便捷按钮脚本</title>
    <url>/2021/01/30/script/SteamStoreToolsBtn/</url>
    <content><![CDATA[<blockquote>
<p>steam商店页面添加点数商店,市场和截图页面跳转按钮,</p>
<blockquote>
<p>steam页面/社区导航栏添加网页key激活跳转</p>
</blockquote>
<p><a href="https://keylol.com/t615154-1-1">脚本发布并作用于keylol论坛 / 反馈</a></p>
<p>脚本基于 <a href="http://www.tampermonkey.net/">油猴</a>  <a href="https://greasyfork.org/zh-CN/scripts/406317">下载</a></p>
</blockquote>
<h4 id="脚本可自行配置"><a href="#脚本可自行配置" class="headerlink" title="脚本可自行配置"></a>脚本可自行配置</h4><a id="more"></a>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">const setting = &#123;</span><br><span class="line">        窗口聚焦: false,</span><br><span class="line">        DOM: [&#123;</span><br><span class="line">                btn_id: <span class="string">&#x27;screenshots_btn&#x27;</span>,</span><br><span class="line">                href: `https:<span class="regexp">//</span>steamcommunity.com<span class="regexp">/app/</span><span class="variable">$&#123;appid&#125;</span><span class="regexp">/screenshots/</span>`,</span><br><span class="line">                name:<span class="string">&#x27;截图&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                btn_id: <span class="string">&#x27;market_btn&#x27;</span>,</span><br><span class="line">                href: `https:<span class="regexp">//</span>steamcommunity.com<span class="regexp">/market/</span>search?appid=<span class="number">753</span>&amp;category_753_Game[]=tag_app_<span class="variable">$&#123;appid&#125;</span>`,</span><br><span class="line">                name:<span class="string">&#x27;市场&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                btn_id: <span class="string">&#x27;points_btn&#x27;</span>,</span><br><span class="line">                href: `https:<span class="regexp">//</span>store.steampowered.com<span class="regexp">/points/</span>shop<span class="regexp">/app/</span><span class="variable">$&#123;appid&#125;</span>`,</span><br><span class="line">                name:<span class="string">&#x27;点数商店&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>STEAM</tag>
        <tag>脚本</tag>
        <tag>Tampermonkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Keylol有卡/中文/包类游戏标记脚本</title>
    <url>/2021/01/30/script/keylol-tools/</url>
    <content><![CDATA[<blockquote>
<p>Keylol论坛自动检索帖子内容 </p>
<blockquote>
<p>并标记有卡/中文游戏 自定义面板 嗨皮喜加一 包类标记 帖子游戏链接转化游戏名等</p>
</blockquote>
<p><a href="https://keylol.com/t587145-1-1">脚本发布并作用于keylol论坛 / 反馈</a></p>
<p>脚本基于 <a href="http://www.tampermonkey.net/">油猴</a>  <a href="https://greasyfork.org/zh-CN/scripts/401805">下载</a></p>
</blockquote>
]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>脚本</tag>
        <tag>Tampermonkey</tag>
        <tag>keylol</tag>
      </tags>
  </entry>
  <entry>
    <title>rem.js 收集 &amp; 媒体查询 @media</title>
    <url>/2021/01/31/mobile/rem/</url>
    <content><![CDATA[<blockquote>
<p>移动开发一般  iPhone6 来设计的   也就是 宽 375px ==750rpx（uniapp）</p>
<p>项目需衡量用户缩放是为了看到更多的内容 还是看到更大的字体</p>
<p>pc端使用 需要<code>resize()</code> 包裹<code>rem.js</code>  考虑兼容性问题 </p>
</blockquote>
<p><strong>知乎</strong> <a href="https://zhuanlan.zhihu.com/p/269105087">https://zhuanlan.zhihu.com/p/269105087</a> </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  </span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">c, d</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> e = <span class="built_in">document</span>.documentElement || <span class="built_in">document</span>.body,</span><br><span class="line">    a = <span class="string">&quot;orientationchange&quot;</span> <span class="keyword">in</span> <span class="built_in">window</span> ? <span class="string">&quot;orientationchange&quot;</span> : <span class="string">&quot;resize&quot;</span>,</span><br><span class="line">    b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> f = e.clientWidth;</span><br><span class="line">      e.style.fontSize = f &gt;= <span class="number">750</span> ? <span class="string">&quot;100px&quot;</span> : <span class="number">100</span> * (f / <span class="number">750</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">  b();</span><br><span class="line">  c.addEventListener(a, b, <span class="literal">false</span>);</span><br><span class="line">&#125;)(<span class="built_in">window</span>);</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<p><strong>小米官网写法</strong></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">!function(n)&#123;</span><br><span class="line">    var  <span class="attribute">e</span>=n.document,</span><br><span class="line">         <span class="attribute">t</span>=e.documentElement,</span><br><span class="line">         <span class="attribute">i</span>=720,</span><br><span class="line">         <span class="attribute">d</span>=i/100,</span><br><span class="line">         <span class="attribute">o</span>=<span class="string">&quot;orientationchange&quot;</span>in n?<span class="string">&quot;orientationchange&quot;</span>:<span class="string">&quot;resize&quot;</span>,</span><br><span class="line">         <span class="attribute">a</span>=function()&#123;</span><br><span class="line">             var <span class="attribute">n</span>=t.clientWidth||320;n&gt;720&amp;&amp;(n=720);</span><br><span class="line">             t.style.<span class="attribute">fontSize</span>=n/d+&quot;px&quot;</span><br><span class="line">         &#125;;</span><br><span class="line">         e.addEventListener&amp;&amp;(n.addEventListener(o,a,!1),e.addEventListener(<span class="string">&quot;DOMContentLoaded&quot;</span>,a,!1))</span><br><span class="line">&#125;(window);</span><br></pre></td></tr></table></figure>
<p><strong>博客源</strong> <a href="https://www.cnblogs.com/xiaomifeng/p/11824600.html">https://www.cnblogs.com/xiaomifeng/p/11824600.html</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/*720代表设计师给的设计稿的宽度，你的设计稿是多少，就写多少;100代表换算比例，这里写100是</span></span><br><span class="line"><span class="comment">      为了以后好算,比如，你测量的一个宽度是100px,就可以写为1rem,以及1px=0.01rem等等*/</span></span><br><span class="line">    getRem(<span class="number">720</span>,<span class="number">100</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    getRem(<span class="number">720</span>,<span class="number">100</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRem</span>(<span class="params">pwidth,prem</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> html = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;html&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> oWidth = <span class="built_in">document</span>.body.clientWidth || <span class="built_in">document</span>.documentElement.clientWidth;</span><br><span class="line">    html.style.fontSize = oWidth/pwidth*prem + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">414px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">375px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">320px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>css的<code>calc</code>计算函数</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">calc</span>(<span class="number">100vw</span>/<span class="number">7.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>移动端</category>
      </categories>
      <tags>
        <tag>移动端</tag>
        <tag>rem</tag>
      </tags>
  </entry>
  <entry>
    <title>云函数 调用 DB 基本方法</title>
    <url>/2021/01/30/uni/cloudfunctions-DB/</url>
    <content><![CDATA[<h4 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">exports.main = <span class="keyword">async</span> (<span class="keyword">event</span>, context) =&gt; &#123;</span><br><span class="line">	<span class="comment">//event为客户端上传的参数</span></span><br><span class="line">	console.log(<span class="string">&#x27;event : &#x27;</span>, <span class="keyword">event</span>)</span><br><span class="line">	<span class="comment">// 查 增 改 删</span></span><br><span class="line">	<span class="keyword">const</span> db = uniCloud.database()</span><br><span class="line">	<span class="keyword">const</span> &#123; data: res &#125; = <span class="keyword">await</span> db.collection(<span class="keyword">event</span>.table).<span class="keyword">get</span>()</span><br><span class="line">	<span class="keyword">const</span> &#123; data: res &#125; = <span class="keyword">await</span> db.collection(<span class="keyword">event</span>.table).<span class="keyword">add</span>(<span class="keyword">event</span>.addData)</span><br><span class="line">	<span class="keyword">const</span> &#123; data: res &#125; = <span class="keyword">await</span> db.collection(<span class="keyword">event</span>.table).doc(<span class="keyword">event</span>.id).update(<span class="keyword">event</span>.changeData)</span><br><span class="line">	<span class="keyword">const</span> &#123; data: res &#125; = <span class="keyword">await</span> db.collection(<span class="keyword">event</span>.table).doc(<span class="keyword">event</span>.id).<span class="keyword">remove</span>()</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//返回数据给客户端</span></span><br><span class="line">	<span class="keyword">return</span> &#123;</span><br><span class="line">		data: res,</span><br><span class="line">		code: <span class="number">200</span>,</span><br><span class="line">		msg: <span class="string">&#x27;获取成功!&#x27;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import &#123; getData, editData, addData, delData &#125; from <span class="string">&#x27;./util/api.js&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue<span class="selector-class">.prototype</span>.<span class="variable">$getData</span> = getData</span><br><span class="line">Vue<span class="selector-class">.prototype</span>.<span class="variable">$editData</span> = editData</span><br><span class="line">Vue<span class="selector-class">.prototype</span>.<span class="variable">$addData</span> = addData</span><br><span class="line">Vue<span class="selector-class">.prototype</span>.<span class="variable">$delData</span> = delData</span><br></pre></td></tr></table></figure>
<h4 id="async-function"><a href="#async-function" class="headerlink" title="async function(){}"></a>async function(){}</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">data</span> = await <span class="keyword">this</span>.$getData(<span class="string">&#x27;column&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">data</span> = await <span class="keyword">this</span>.$addData( tableName, &#123; name: <span class="string">&#x27;&#x27;</span>&#125;)</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">data</span> = await <span class="keyword">this</span>.$editData(<span class="string">&#x27;column&#x27;</span>, id, &#123; src: url &#125;)</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">data</span> = await <span class="keyword">this</span>.$delData( tableName, id)</span><br></pre></td></tr></table></figure>
<h4 id="api-js"><a href="#api-js" class="headerlink" title="api.js"></a>api.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getData = <span class="function">(<span class="params">table</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">		uniCloud.callFunction(&#123;</span><br><span class="line">			name:<span class="string">&#x27;getData&#x27;</span>,</span><br><span class="line">			data:&#123;</span><br><span class="line">				table</span><br><span class="line">			&#125;,</span><br><span class="line">			success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="keyword">const</span> data = res.result</span><br><span class="line">				<span class="keyword">if</span> (data.code !== <span class="number">200</span>) &#123;</span><br><span class="line">					<span class="keyword">return</span> uni.showToast(&#123;</span><br><span class="line">						title: <span class="string">&#x27;数据获取出错!&#x27;</span>,</span><br><span class="line">						icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">					&#125;)</span><br><span class="line">				&#125;</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据获取成功!&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">				<span class="built_in">console</span>.log(data.data)</span><br><span class="line">				resolve(data.data)</span><br><span class="line">			&#125;,</span><br><span class="line">			fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="built_in">console</span>.log(err)</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据获取失败!&#x27;</span>,</span><br><span class="line">					icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> editData =<span class="keyword">async</span> (table,id,changeData) =&gt; &#123;</span><br><span class="line">	<span class="keyword">await</span> isChange()</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">		uniCloud.callFunction(&#123;</span><br><span class="line">			name:<span class="string">&#x27;editData&#x27;</span>,</span><br><span class="line">			data:&#123;</span><br><span class="line">				table,</span><br><span class="line">				id,</span><br><span class="line">				changeData</span><br><span class="line">			&#125;,</span><br><span class="line">			success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="built_in">console</span>.log(res.result)</span><br><span class="line">				<span class="keyword">const</span> data = res.result</span><br><span class="line">				<span class="keyword">if</span> (data.code !== <span class="number">200</span>) &#123;</span><br><span class="line">					<span class="keyword">return</span> uni.showToast(&#123;</span><br><span class="line">						title: <span class="string">&#x27;数据获取出错!&#x27;</span>,</span><br><span class="line">						icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">					&#125;)</span><br><span class="line">				&#125;</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据修改成功!&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">				resolve(data)</span><br><span class="line">			&#125;,</span><br><span class="line">			fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="built_in">console</span>.log(err)</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据获取失败!&#x27;</span>,</span><br><span class="line">					icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isChange</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">		uni.showModal(&#123;</span><br><span class="line">		    title: <span class="string">&#x27;修改&#x27;</span>,</span><br><span class="line">		    content: <span class="string">&#x27;注意数据备份!谨慎操作!数据不可逆!&#x27;</span>,</span><br><span class="line">		    success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">		        <span class="keyword">if</span> (res.confirm) &#123;</span><br><span class="line">		            resolve(<span class="literal">true</span>)</span><br><span class="line">		        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.cancel) &#123;</span><br><span class="line">		            <span class="keyword">return</span> uni.showToast(&#123;</span><br><span class="line">		            	title: <span class="string">&#x27;操作取消!&#x27;</span>,</span><br><span class="line">		            	icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">		            &#125;)</span><br><span class="line">		        &#125;</span><br><span class="line">		    &#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> addData =<span class="keyword">async</span> (table,addData) =&gt; &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">		uniCloud.callFunction(&#123;</span><br><span class="line">			name:<span class="string">&#x27;addData&#x27;</span>,</span><br><span class="line">			data:&#123;</span><br><span class="line">				table,</span><br><span class="line">				addData</span><br><span class="line">			&#125;,</span><br><span class="line">			success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="built_in">console</span>.log(res.result)</span><br><span class="line">				<span class="keyword">const</span> data = res.result</span><br><span class="line">				<span class="keyword">if</span> (data.code !== <span class="number">200</span>) &#123;</span><br><span class="line">					<span class="keyword">return</span> uni.showToast(&#123;</span><br><span class="line">						title: <span class="string">&#x27;数据添加出错!&#x27;</span>,</span><br><span class="line">						icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">					&#125;)</span><br><span class="line">				&#125;</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据添加成功!&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">				resolve(data)</span><br><span class="line">			&#125;,</span><br><span class="line">			fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="built_in">console</span>.log(err)</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据添加失败!&#x27;</span>,</span><br><span class="line">					icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> delData =<span class="keyword">async</span> (table,id) =&gt; &#123;</span><br><span class="line">	<span class="keyword">await</span> isChange()</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">		uniCloud.callFunction(&#123;</span><br><span class="line">			name:<span class="string">&#x27;delData&#x27;</span>,</span><br><span class="line">			data:&#123;</span><br><span class="line">				table,</span><br><span class="line">				id,</span><br><span class="line">			&#125;,</span><br><span class="line">			success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="built_in">console</span>.log(res.result)</span><br><span class="line">				<span class="keyword">const</span> data = res.result</span><br><span class="line">				<span class="keyword">if</span> (data.code !== <span class="number">200</span>) &#123;</span><br><span class="line">					<span class="keyword">return</span> uni.showToast(&#123;</span><br><span class="line">						title: <span class="string">&#x27;数据删除出错!&#x27;</span>,</span><br><span class="line">						icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">					&#125;)</span><br><span class="line">				&#125;</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据删除成功!&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">				resolve(data)</span><br><span class="line">			&#125;,</span><br><span class="line">			fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">				<span class="built_in">console</span>.log(err)</span><br><span class="line">				uni.showToast(&#123;</span><br><span class="line">					title: <span class="string">&#x27;数据删除失败!&#x27;</span>,</span><br><span class="line">					icon: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>uniCloud</category>
      </categories>
      <tags>
        <tag>uniapp</tag>
        <tag>unicloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Node基础及跨域配置</title>
    <url>/2021/01/30/node/Node-Allow-Origin/</url>
    <content><![CDATA[<h4 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h4><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">npm install <span class="built_in">express</span> --<span class="built_in">save</span></span><br></pre></td></tr></table></figure>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install compression <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="comment">// gzip压缩</span></span><br><span class="line"><span class="comment">// const compression = require(&#x27;compression&#x27;)</span></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line">app.use(express.json())</span><br><span class="line">app.use(compression())</span><br><span class="line"><span class="comment">// 打包后项目</span></span><br><span class="line"><span class="comment">// app.use(express.static(&#x27;./dist&#x27;))</span></span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123;</span><br><span class="line">    extended: <span class="literal">false</span></span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="跨域配置"><a href="#跨域配置" class="headerlink" title="跨域配置"></a>跨域配置</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.all(<span class="string">&#x27;*&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    res.header(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    res.header(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Origin, X-Requested-With, Content-Type, Accept&#x27;</span>)</span><br><span class="line">    res.header(<span class="string">&#x27;Access-Control-Allow-Metheds&#x27;</span>, <span class="string">&#x27;PUT, POST, GET, DELETE, OPTIONS&#x27;</span>)</span><br><span class="line">    res.header(<span class="string">&#x27;X-Powered-By&#x27;</span>, <span class="string">&#x27;nodejs&#x27;</span>)</span><br><span class="line">    res.header(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json;charset=utf-8&#x27;</span>);</span><br><span class="line">    next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">const register = <span class="built_in">require</span>(<span class="string">&#x27;./api/register&#x27;</span>);</span><br><span class="line">const login = <span class="built_in">require</span>(<span class="string">&#x27;./api/login&#x27;</span>);</span><br><span class="line">const getValue = <span class="built_in">require</span>(<span class="string">&#x27;./api/getValue&#x27;</span>);</span><br><span class="line">app.post(<span class="string">&#x27;/user/regist&#x27;</span>,<span class="function"><span class="params">(req, res)</span>=&gt;</span> register(req, res));</span><br><span class="line">app.post(<span class="string">&#x27;/user/login&#x27;</span>,<span class="function"><span class="params">(req, res)</span>=&gt;</span> login(req, res));</span><br><span class="line">app.get(<span class="string">&#x27;/getValue&#x27;</span>,<span class="function"><span class="params">(req,res)</span>=&gt;</span> getValue(req,res));</span><br></pre></td></tr></table></figure>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hostName = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line"><span class="keyword">var</span> port = <span class="number">81</span></span><br><span class="line">app.listen(port, hostName, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`服务器运行在 http://<span class="subst">$&#123;hostName&#125;</span>:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>跨域</tag>
      </tags>
  </entry>
  <entry>
    <title>unicloud-db 踩坑</title>
    <url>/2021/01/30/uni/unicloud-db/</url>
    <content><![CDATA[<p><a href="https://unicloud.dcloud.net.cn/login">uniCloud 控制端</a><br><code>&lt;unicloud-db&gt;</code> <a href="https://uniapp.dcloud.io/uniCloud/unicloud-db">官方文档</a></p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">unicloud-db</span> <span class="attr">v-slot:default</span>=<span class="string">&quot;&#123;data, loading, error, options&#125;&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;table1&quot;</span>  <span class="attr">ref</span>=<span class="string">&quot;udb&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">error.message</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-else-if</span>=<span class="string">&quot;loading&quot;</span>&gt;</span>正在加载...<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; <span class="name">data</span>&#125;&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">unicloud-db</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><strong>使用前需配置</strong> <strong>DB Schema</strong>  <a href="https://uniapp.dcloud.io/uniCloud/schema">官方文档</a></p>
<a id="more"></a>

<p>[^permission]: 必须开启相关权限才是使用组件    如基本使用的<code>read</code><br>[^properties]: 字段校验 用于后期数据添加或修改</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;bsonType&quot;</span>: <span class="string">&quot;object&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;required&quot;</span>: [],</span><br><span class="line">  <span class="attr">&quot;permission&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;read&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;create&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;update&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;delete&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;ID，系统自动生成&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;bsonType&quot;</span>: <span class="string">&quot;string&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;tags&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;bsonType&quot;</span>: <span class="string">&quot;array&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;downloadURL&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;bsonType&quot;</span>: <span class="string">&quot;string&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>properties 配置后才能 add 添加数据</strong></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">this.<span class="variable">$refs</span>.udb.<span class="builtin-name">add</span>(value)</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.$refs.udb.add(value, &#123;</span><br><span class="line">  toastTitle: <span class="string">&#x27;新增成功&#x27;</span>, <span class="comment">// toast提示语</span></span><br><span class="line">  success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123; <span class="comment">// 新增成功后的回调</span></span><br><span class="line">    <span class="keyword">const</span> &#123; code, message &#125; = res</span><br><span class="line">  &#125;,</span><br><span class="line">  fail: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123; <span class="comment">// 新增失败后的回调</span></span><br><span class="line">    <span class="keyword">const</span> &#123; message &#125; = err</span><br><span class="line">  &#125;,</span><br><span class="line">  complete: <span class="function">() =&gt;</span> &#123; <span class="comment">// 完成后的回调</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>uniCloud</category>
      </categories>
      <tags>
        <tag>uniapp</tag>
        <tag>unicloud</tag>
      </tags>
  </entry>
  <entry>
    <title>node Express 笔记</title>
    <url>/2021/02/02/node/Express/</url>
    <content><![CDATA[<h4 id="require传参"><a href="#require传参" class="headerlink" title="require传参"></a>require传参</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">req.params = option = &#123; <span class="attr">view:</span> <span class="string">&#x27;hot&#x27;</span>, <span class="attr">page:</span> <span class="string">&#x27;1&#x27;</span> &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">router.all(<span class="string">&#x27;/view/:view/page/:page&#x27;</span>,<span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> data= <span class="keyword">await</span> <span class="built_in">require</span>(<span class="string">&#x27;.././api/hot&#x27;</span>)(req.params)</span><br><span class="line">    res.send(<span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.<span class="built_in">exports</span> = <span class="function"><span class="params">(option)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(option[<span class="string">&#x27;hot&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="json-和-send"><a href="#json-和-send" class="headerlink" title=".json() 和 .send()"></a>.json() 和 .send()</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">res</span><span class="selector-class">.json</span>() </span><br><span class="line"><span class="selector-tag">res</span><span class="selector-class">.send</span>(<span class="selector-tag">JSON</span><span class="selector-class">.stringify</span>(<span class="selector-tag">data</span>))</span><br></pre></td></tr></table></figure>
<h4 id="params-和-query"><a href="#params-和-query" class="headerlink" title="params 和 query"></a>params 和 query</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/api/view/hot?page=2</span></span><br><span class="line"></span><br><span class="line">router.all(<span class="string">&#x27;/view/:view/&#x27;</span>,<span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> data= <span class="keyword">await</span> <span class="built_in">require</span>(<span class="string">&#x27;.././api/hot&#x27;</span>)(req.params,req.query)</span><br><span class="line">    res.send(<span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.<span class="built_in">exports</span> = <span class="function"><span class="params">(params,query)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(params,query);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h4><blockquote>
<p>next() 放行 再执行其他操作等</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.use(<span class="built_in">require</span>(<span class="string">&#x27;./logger&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;wsz987&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`method: <span class="subst">$&#123;req.method&#125;</span>,url: <span class="subst">$&#123;req.url&#125;</span>`</span>)</span><br><span class="line">    next()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="路由分级写法"><a href="#路由分级写法" class="headerlink" title="路由分级写法"></a>路由分级写法</h4><blockquote>
<p>传统</p>
</blockquote>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">router.get(<span class="string">&#x27;/api/index&#x27;</span>, <span class="function"><span class="params">(req, res)</span> =&gt;</span> &#123;</span><br><span class="line">    res.send()</span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">&#x27;/api/view&#x27;</span>, <span class="function"><span class="params">(req, res)</span> =&gt;</span> &#123;</span><br><span class="line">    res.send()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>等效</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">app.<span class="keyword">use</span>(<span class="string">&#x27;/api&#x27;</span>,<span class="keyword">require</span>(<span class="string">&#x27;./router/router&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">router.all(<span class="string">&#x27;/index&#x27;</span>,<span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> data= <span class="keyword">await</span> require(<span class="string">&#x27;.././api/index&#x27;</span>)</span><br><span class="line">    res.status(<span class="number">200</span>).json(data)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.<span class="keyword">get</span>(<span class="string">&#x27;/view&#x27;</span>,<span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    res.send(<span class="string">&#x27;66&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>Express</tag>
      </tags>
  </entry>
  <entry>
    <title>Node Cheerio-Superagent keylol论坛数据抓取</title>
    <url>/2021/02/05/node/Node-Cheerio/</url>
    <content><![CDATA[<blockquote>
<p>数据抓取基于 <a href="https://keylol.com/forum.php?m=index&mobile=2">keylol 移动端</a> 页面   </p>
<p><strong>不涉及任何权限帖子 &amp; 版块内容</strong>  单纯列表抓取 不抓取任何帖子内容 – 其实我不会φ(*￣0￣) 守株待兔逮个大佬</p>
<blockquote>
<p>接口基于对应请求 <strong>一对一页面抓取</strong>  不会对论坛服务器照成负载  <strong>但请不要 频繁 &amp; ‘’过分’’ 请求造成 论坛502</strong></p>
</blockquote>
<p><strong>此仓仅供学习</strong>  – 实际Node小白 这接口顶多做个列表数据渲染</p>
<p>请勿恶意使用 如有侵权   请联系论坛ID: wsz987 – Github这边不常看</p>
<p>♥ GAY坛    <a href="https://github.com/wsz987/KeylolDataAPI">Github</a></p>
</blockquote>
<h4 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h4><ul>
<li><a href="https://www.expressjs.com.cn/">Express框架</a></li>
<li><a href="https://github.com/cheeriojs/cheerio/wiki/Chinese-README">Cheerio中文</a></li>
<li><a href="https://www.npmjs.com/package/superagent">Superagent</a></li>
</ul>
<a id="more"></a>
<h4 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> i || <span class="built_in">npm</span> install</span><br></pre></td></tr></table></figure>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">app</span></span><br><span class="line">// 热更新模式 </span><br><span class="line">nodemon app</span><br></pre></td></tr></table></figure>
<h4 id="端口配置"><a href="#端口配置" class="headerlink" title="端口配置"></a>端口配置</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hostName = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line"><span class="keyword">var</span> port = process.env.PORT || <span class="number">80</span></span><br><span class="line">app.listen(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`服务器运行在 http://<span class="subst">$&#123;hostName&#125;</span>:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">├─.gitignore</span><br><span class="line">├─app.js        <span class="regexp">//</span> 启动文件</span><br><span class="line">├─logger.js     <span class="regexp">//</span> 日志打印 mothod &amp; url</span><br><span class="line">├─package-lock.json       </span><br><span class="line">├─package.json</span><br><span class="line">├─src           <span class="regexp">//</span> 静态文件 版块列表JSON </span><br><span class="line">|  └forumlist.json        </span><br><span class="line">├─router        <span class="regexp">//</span> 路由</span><br><span class="line">|   └router.js</span><br><span class="line">├─api           <span class="regexp">//</span> 爬虫脚本</span><br><span class="line">|  ├─forumlist.js            <span class="regexp">//</span> 论坛非权限版块列表 (固定内容不需要频繁抓取)</span><br><span class="line">|  ├─index.js                <span class="regexp">//</span> 主页内容</span><br><span class="line">|  ├─post.js                 <span class="regexp">//</span> 帖子内容 (只有结构 无抓取代码 已声明不做任何抓取--实际不会 抓取效果不好)</span><br><span class="line">|  ├─readFile_forumlist.js   <span class="regexp">//</span> 读取静态文件 版块列表JSON </span><br><span class="line">|  ├─subtypes.js             <span class="regexp">//</span> 版块内容列表</span><br><span class="line">|  └─view.js                 <span class="regexp">//</span> 导读版块 tabBar列表</span><br></pre></td></tr></table></figure>
<h4 id="请求头注意项"><a href="#请求头注意项" class="headerlink" title="请求头注意项"></a>请求头注意项</h4><figure class="highlight scheme"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&#x27;user-agent</span><span class="symbol">&#x27;:</span> <span class="symbol">&#x27;Mozilla/5.0</span> (<span class="name">iPhone</span><span class="comment">; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1&#x27;</span></span><br></pre></td></tr></table></figure>
<h4 id="版块列表-默认返回静态JSON"><a href="#版块列表-默认返回静态JSON" class="headerlink" title="版块列表 默认返回静态JSON"></a>版块列表 默认返回静态JSON</h4><p><strong>app.js</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 版块列表</span></span><br><span class="line">app.<span class="keyword">use</span>(<span class="string">&#x27;/api/forumlist/&#x27;</span>,express.<span class="built_in">static</span>(<span class="string">&#x27;./src/forumlist.json&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p><strong>router.js</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 版块列表</span><br><span class="line"><span class="regexp">//</span> router.all(<span class="string">&#x27;/forumlist&#x27;</span>, async (req, res) =&gt; &#123;</span><br><span class="line">    <span class="regexp">//</span>数据抓取 JSON写入</span><br><span class="line">    <span class="regexp">//</span> const data = await require(<span class="string">&#x27;../api/forumlist&#x27;</span>)</span><br><span class="line">    <span class="regexp">//</span>JSON 读取</span><br><span class="line">    <span class="regexp">//</span> const data = await require(<span class="string">&#x27;../api/readFile_forumlist&#x27;</span>)</span><br><span class="line">    <span class="regexp">//</span> res.json(data)</span><br><span class="line"><span class="regexp">//</span> &#125;)</span><br></pre></td></tr></table></figure>
<h4 id="接口参数"><a href="#接口参数" class="headerlink" title="接口参数"></a>接口参数</h4><blockquote>
<p>后端不做限制 API请求 router.all()</p>
</blockquote>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">app.<span class="keyword">all</span>(<span class="string">&#x27;*&#x27;</span>, <span class="keyword">function</span> (req, res, next) &#123;</span><br><span class="line">    res.<span class="keyword">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    res.<span class="keyword">header</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Origin, X-Requested-With, Content-Type, Accept&#x27;</span>)</span><br><span class="line">    res.<span class="keyword">header</span>(<span class="string">&#x27;Access-Control-Allow-Metheds&#x27;</span>, <span class="string">&#x27;PUT, POST, GET, DELETE, OPTIONS&#x27;</span>)</span><br><span class="line">    res.<span class="keyword">header</span>(<span class="string">&#x27;X-Powered-By&#x27;</span>, <span class="string">&#x27;nodejs&#x27;</span>)</span><br><span class="line">    res.<span class="keyword">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json;charset=utf-8&#x27;</span>);</span><br><span class="line">    next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="接口路径"><a href="#接口路径" class="headerlink" title="接口路径"></a>接口路径</h4><blockquote>
<p><a href="https://keylol.com/forum.php?m=index&mobile=2"><strong>主页</strong></a> (无参)</p>
</blockquote>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/api/i</span>ndex</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://keylol.com/forum.php?mod=guide&view=hot&mobile=2"><strong>导读</strong></a></p>
<p>最新热门; hot</p>
<p>最新精华: digest</p>
<p>最新发表: newthread</p>
<p>最新回复: new</p>
<p>最新沙发: sofa</p>
<p><code>page</code> 不带的话默认第一页</p>
</blockquote>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">/api/<span class="meta">view</span>/:<span class="meta">view</span>?<span class="meta">page</span>=1</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://keylol.com/forum.php?forumlist=1&mobile=2"><strong>版块列表</strong></a> (无参)</p>
</blockquote>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/api/</span>forumlist</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>帖子</strong>  (只是有个路径) 例: t682753-1-1</p>
</blockquote>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/api/</span>post/:t</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://keylol.com/f148-1"><strong>版块内容列表</strong></a></p>
<p><code>fid</code>  支持俩格式  <code>/api/subtypes/f123-1</code>  <strong>等效</strong>于 <code>/api/subtypes/123?page=1</code></p>
<p><code>typeid</code> 分类  <strong>默认不带 = 返回全部内容</strong>  ( 参见接口返回<code>subtypes</code>信息 )</p>
<p><code>page</code> 默认第一页</p>
</blockquote>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta-keyword">/api/</span>subtypes/:fid?typeid=<span class="variable">&amp;page</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="symbol">    subtypes:</span> [],</span><br><span class="line"><span class="symbol">    threadlist:</span> []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="其他详细信息请查看返回JSON-无状态码返回-默认-status-200"><a href="#其他详细信息请查看返回JSON-无状态码返回-默认-status-200" class="headerlink" title="其他详细信息请查看返回JSON 无状态码返回 默认 status=200"></a>其他详细信息请查看返回JSON 无状态码返回 默认 status=200</h4>]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>Express</tag>
        <tag>Cheerio</tag>
        <tag>Superagent</tag>
      </tags>
  </entry>
  <entry>
    <title>Node 镶嵌MQTT及前端WebSocket通讯</title>
    <url>/2021/01/30/node/Node-MQTT-WebSocket/</url>
    <content><![CDATA[<h4 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h4><p>Mosca 为 消息缓存 及 MQTT消息–主题订阅相互配对 的中转服务器<br>MQTT 分为 发布端 和 订阅端  与传统http 三次握手不一样<br>MQTT 只需在连接之初向服务器订阅相关的主题 则可以实现消息的持续接收 在效率，数据响应方面便捷于传统请求<br>MQTT 多用于工业 后端 与 硬件设备、总控间的实时通讯协议<br>前端无法直接使用 MQTT 与后端进行数据交互 实际使用为 websocket 协议</p>
<h4 id="搭建-Mosca-服务端"><a href="#搭建-Mosca-服务端" class="headerlink" title="搭建 Mosca 服务端"></a>搭建 Mosca 服务端</h4><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install mosca <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<h4 id="安装MQTT-前端同样安装"><a href="#安装MQTT-前端同样安装" class="headerlink" title="安装MQTT  /  前端同样安装"></a>安装MQTT  /  前端同样安装</h4><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install mqtt <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<h4 id="调试工具"><a href="#调试工具" class="headerlink" title="调试工具"></a>调试工具</h4><p><a href="https://mqttx.app/cn/">MQTTX</a></p>
<a id="more"></a>

<h4 id="Mosca-及-published-镶嵌到app-js"><a href="#Mosca-及-published-镶嵌到app-js" class="headerlink" title="Mosca 及 published 镶嵌到app.js"></a>Mosca 及 published 镶嵌到app.js</h4><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mosca=<span class="keyword">require</span>(<span class="string">&#x27;./mqtt/server&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">published</span>=<span class="keyword">require</span>(<span class="string">&#x27;./mqtt/published&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h4 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h4><blockquote>
<p>[^port]: 为MQTT端口  接口示例 mqtt://127.0.0.1:1883<br>[^http]: 因为前端无法直接与MQTT连接 需要另外配置http端口  实则websocket协议</p>
<blockquote>
<p>接口示例 ws://127.0.0.1:1884</p>
</blockquote>
<p><code>user</code> <code>password</code>配置 配合前端连接</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mosca = <span class="built_in">require</span>(<span class="string">&#x27;mosca&#x27;</span>); </span><br><span class="line"><span class="comment">//构建自带服务器  1833 为mqtt 1884 为前端websocket通讯端口  前端无法直接使用mqtt</span></span><br><span class="line"><span class="keyword">const</span> MqttServer = <span class="keyword">new</span> mosca.Server(&#123;</span><br><span class="line">    port: <span class="number">1883</span>,</span><br><span class="line">    http: &#123;</span><br><span class="line">        port: <span class="number">1884</span>,</span><br><span class="line">        bundle: <span class="literal">true</span>,</span><br><span class="line">        <span class="keyword">static</span>: <span class="string">&#x27;./&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    user:<span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">    password :<span class="string">&#x27;123456&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//对服务器端口进行配置， 在此端口进行监听</span></span><br><span class="line">MqttServer.on(<span class="string">&#x27;clientConnected&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">client</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//监听连接</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;client connected&#x27;</span>, client.id);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">MqttServer.on(<span class="string">&#x27;ready&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//当服务开启时</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Mosca server is running...&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = MqttServer</span><br></pre></td></tr></table></figure>
<h4 id="推送端示例"><a href="#推送端示例" class="headerlink" title="推送端示例"></a>推送端示例</h4><blockquote>
<p>注意推送内容需要<code>JSON.stringify()</code></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">server.on(<span class="string">&#x27;published&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">packet, client</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Published&#x27;</span>, packet.payload);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="published-js"><a href="#published-js" class="headerlink" title="published.js"></a>published.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mqtt = <span class="built_in">require</span>(<span class="string">&#x27;mqtt&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> MqttServer = <span class="built_in">require</span>(<span class="string">&#x27;./server&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> client1 = mqtt.connect(<span class="string">&#x27;mqtt://127.0.0.1:1883&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> state1=<span class="number">1</span>,state2=<span class="number">1</span>  <span class="comment">//设备状态码存储</span></span><br><span class="line">MqttServer.on(<span class="string">&#x27;published&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">packet, client</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//当客户端有连接发布主题消息</span></span><br><span class="line">    <span class="keyword">var</span> topic = packet.topic;</span><br><span class="line">    <span class="built_in">console</span>.log(packet.payload);</span><br><span class="line">    <span class="comment">// 前端启动开始数据推送  频率</span></span><br><span class="line">    <span class="keyword">switch</span> (topic) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;lightState&#x27;</span>:</span><br><span class="line">            <span class="comment">//硬件 灯控制</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;lightState&#x27;</span>, packet.payload.toString());</span><br><span class="line">            client1.publish(<span class="string">&#x27;isLight&#x27;</span>, <span class="built_in">JSON</span>.stringify(<span class="literal">false</span>), &#123; <span class="attr">qos</span>: <span class="number">0</span>, <span class="attr">retain</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;runState&#x27;</span>:</span><br><span class="line">            <span class="comment">// 设备状态改变 同步</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;runState&#x27;</span>,<span class="built_in">JSON</span>.parse(packet.payload));</span><br><span class="line">            client1.publish(<span class="string">&#x27;isRun&#x27;</span>, <span class="string">`[<span class="subst">$&#123;state1&#125;</span>,<span class="subst">$&#123;state2&#125;</span>]`</span>, &#123; <span class="attr">qos</span>: <span class="number">0</span>, <span class="attr">retain</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="订阅端"><a href="#订阅端" class="headerlink" title="订阅端"></a>订阅端</h4><blockquote>
<p>Node</p>
<blockquote>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">client</span>  = mqtt.connect(<span class="string">&#x27;mqtt://127.0.0.1:1883&#x27;</span>)</span><br></pre></td></tr></table></figure>
</blockquote>
<p><strong>前端</strong></p>
<blockquote>
</blockquote>
<blockquote>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mqtt = require(<span class="string">&#x27;mqtt&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">client</span> = mqtt.connect(<span class="string">&#x27;ws://127.0.0.1:1884&#x27;</span>, &#123;</span><br><span class="line">      username: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">      password: <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">      connectTimeout: <span class="number">4000</span>,</span><br><span class="line">      reconnectPeriod: <span class="number">0</span>,</span><br><span class="line">      clientId: <span class="string">&#x27;Demo_vue&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>挂载全局</p>
</blockquote>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">import Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">Vue.prototype.$<span class="keyword">client</span> = <span class="keyword">client</span></span><br></pre></td></tr></table></figure>

</blockquote>
<p><strong>subscribe() 订阅主题</strong></p>
<p><strong>publish() 消息发布</strong></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.$client.on(<span class="string">&#x27;connect&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.$client.subscribe([<span class="string">&#x27;lightState&#x27;</span>，<span class="string">&#x27;runState&#x27;</span>])</span><br><span class="line">  <span class="built_in">this</span>.$client.publish(<span class="string">&#x27;State1&#x27;</span>, <span class="string">&#x27;AT*GPO=1,0#&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">this</span>.$client.on(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">topic, message</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="keyword">switch</span> (topic) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;isRun&#x27;</span>:</span><br><span class="line">          <span class="comment">// console.log(&#x27;subMqtt -&gt; message -&gt; isRun&#x27;, JSON.parse(message))</span></span><br><span class="line">         <span class="keyword">break</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>MQTT</tag>
        <tag>WebSocket</tag>
      </tags>
  </entry>
  <entry>
    <title>Node MySQL配置及登录注册接口实例</title>
    <url>/2021/01/30/node/Node-MySQL/</url>
    <content><![CDATA[<h4 id="安装MySQL依赖"><a href="#安装MySQL依赖" class="headerlink" title="安装MySQL依赖"></a>安装MySQL依赖</h4><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install mysql <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<h4 id="连接MySQL"><a href="#连接MySQL" class="headerlink" title="连接MySQL"></a>连接MySQL</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">const mysql = require(<span class="string">&#x27;mysql&#x27;</span>)</span><br><span class="line">const <span class="keyword">connection</span> = mysql.createConnection(&#123;</span><br><span class="line">    host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="keyword">user</span>     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="keyword">password</span> : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    port: <span class="number">3306</span>,</span><br><span class="line">    <span class="keyword">database</span> : <span class="string">&#x27;workshop&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line"><span class="keyword">connection</span>.<span class="keyword">connect</span>()</span><br><span class="line">module.exports = <span class="keyword">connection</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>已知问题  MySQL 连接存在睡眠期 会断开连接</p>
</blockquote>
<h4 id="在需要的页面引用即可"><a href="#在需要的页面引用即可" class="headerlink" title="在需要的页面引用即可"></a>在需要的页面引用即可</h4><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">const connection</span> =require(<span class="string">&#x27;../sqlConfig&#x27;</span>);</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="login-js"><a href="#login-js" class="headerlink" title="login.js"></a>login.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> connection =<span class="built_in">require</span>(<span class="string">&#x27;../sqlConfig&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Response = <span class="built_in">require</span>(<span class="string">&#x27;./response&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> md5 = <span class="built_in">require</span>(<span class="string">&#x27;blueimp-md5&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> param = req.body;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;login -&gt; param&quot;</span>, param)</span><br><span class="line">    <span class="keyword">let</span> username = param.username;</span><br><span class="line">    <span class="keyword">let</span> password = md5(param.password);</span><br><span class="line">    <span class="keyword">let</span> response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;&#x27;</span>,-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(username &amp;&amp; password)&#123;</span><br><span class="line">        <span class="comment">//1、查询数据库中是否有用户名</span></span><br><span class="line">        connection.query(<span class="string">&quot;SELECT * FROM USER WHERE username = ?&quot;</span>,[username], <span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">            <span class="keyword">if</span>(results.length &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//2、如果有用户名，查询密码是否相同</span></span><br><span class="line">                <span class="keyword">if</span>(password == results[<span class="number">0</span>].password)&#123;</span><br><span class="line">                    <span class="comment">//3、密码相同则登陆成功</span></span><br><span class="line">                    response = <span class="keyword">new</span> Response(<span class="literal">true</span>,<span class="string">&#x27;登陆成功&#x27;</span>,<span class="number">200</span>);</span><br><span class="line">                    res.send(response);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;登陆失败，密码错误&#x27;</span>,<span class="number">400</span>);</span><br><span class="line">                    res.send(response);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;登陆失败，没有此用户名&#x27;</span>,<span class="number">400</span>);</span><br><span class="line">                res.send(response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;登陆失败，用户名或密码不能为空&#x27;</span>,<span class="number">400</span>);</span><br><span class="line">        res.send(response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = login;</span><br></pre></td></tr></table></figure>
<h4 id="register-js"><a href="#register-js" class="headerlink" title="register.js"></a>register.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> connection =<span class="built_in">require</span>(<span class="string">&#x27;../sqlConfig&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Response = <span class="built_in">require</span>(<span class="string">&#x27;./response&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> md5 = <span class="built_in">require</span>(<span class="string">&#x27;blueimp-md5&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> param = req.body;</span><br><span class="line">    <span class="keyword">const</span> username = param.username;</span><br><span class="line">    <span class="keyword">const</span> password = md5(param.password);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;&#x27;</span>,-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(username &amp;&amp; password)&#123;</span><br><span class="line">        <span class="comment">//1、查看数据库中是否有相同用户名</span></span><br><span class="line">        connection.query(<span class="string">&quot;SELECT * FROM USER WHERE username = ?&quot;</span>,[username], <span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">            <span class="keyword">if</span>(results.length &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//2、如果有相同用户名，则注册失败，用户名重复</span></span><br><span class="line">                response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;注册失败，用户名重复&#x27;</span>,<span class="number">422</span>);</span><br><span class="line">                res.send(response);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                connection.query(<span class="string">&quot;INSERT INTO user(username,password) VALUES(?,?)&quot;</span>, [username,password],<span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">                    <span class="comment">//3、如果没有相同用户名，并且有一条记录，则注册成功</span></span><br><span class="line">                    <span class="keyword">if</span>(results.affectedRows==<span class="number">1</span>)&#123;</span><br><span class="line">                        response = <span class="keyword">new</span> Response(<span class="literal">true</span>,<span class="string">&#x27;注册成功&#x27;</span>,<span class="number">201</span>);</span><br><span class="line">                        res.send(response);</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;注册失败&#x27;</span>,<span class="number">400</span>);</span><br><span class="line">                        res.send(response);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        response = <span class="keyword">new</span> Response(<span class="literal">false</span>,<span class="string">&#x27;注册失败，用户名、密码不能为空&#x27;</span>,-<span class="number">1</span>);</span><br><span class="line">        res.send(response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = register;</span><br></pre></td></tr></table></figure>
<h4 id="response-js-封装"><a href="#response-js-封装" class="headerlink" title="response.js 封装"></a>response.js 封装</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Response</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(success,msg,code,result)&#123;</span><br><span class="line">       <span class="keyword">this</span>.success = success;</span><br><span class="line">       <span class="keyword">this</span>.msg = msg;</span><br><span class="line">       <span class="keyword">this</span>.code = code;</span><br><span class="line">       <span class="keyword">this</span>.result = result;</span><br><span class="line">       <span class="keyword">this</span>.<span class="keyword">data</span>=<span class="string">&#x27;666&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">module.exports = Response;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Node-Note</title>
    <url>/2021/02/02/node/Node-Note/</url>
    <content><![CDATA[<h4 id="fs-writeFile"><a href="#fs-writeFile" class="headerlink" title="fs.writeFile()"></a>fs.writeFile()</h4><blockquote>
<p>路径为项目根目录开始</p>
<p><code>../</code>会导致 <code>相对路径</code>变成 <code>系统盘开始的绝对路径</code></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line">fs.writeFile(<span class="string">&#x27;src/forumlist.json&#x27;</span>,</span><br><span class="line">    <span class="built_in">JSON</span>.stringify(forumlist, <span class="string">&quot;&quot;</span>, <span class="string">&quot;\t&quot;</span>),</span><br><span class="line">    err =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">throw</span> err</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>
<h4 id="JSON-stringify"><a href="#JSON-stringify" class="headerlink" title="JSON.stringify()"></a>JSON.stringify()</h4><blockquote>
<p>VSC配合插件 JSON的美化输出</p>
</blockquote>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">JSON</span>.</span></span>stringify(forumlist, <span class="string">&quot;&quot;</span>, <span class="string">&quot;\t&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>Note</tag>
      </tags>
  </entry>
  <entry>
    <title>Node 实用Tools</title>
    <url>/2021/02/02/node/Node-Tools/</url>
    <content><![CDATA[<h4 id="PM2-进程管理"><a href="#PM2-进程管理" class="headerlink" title="PM2  进程管理"></a><a href="https://github.com/Unitech/pm2">PM2 </a> 进程管理</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">npm</span> install pm<span class="number">2</span> -g</span><br></pre></td></tr></table></figure>
<p><strong>常用命令</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">pm2 start app.js</span><br><span class="line">pm2 list</span><br><span class="line">$ pm2 stop     &lt;app_name|<span class="keyword">namespace</span>|<span class="symbol">id</span>|&#x27;<span class="symbol">all</span>&#x27;|<span class="symbol">json_conf</span>&gt;</span><br><span class="line">$ <span class="symbol">pm2</span> <span class="symbol">restart</span>  &lt;<span class="symbol">app_name</span>|<span class="symbol">namespace</span>|<span class="symbol">id</span>|&#x27;<span class="symbol">all</span>&#x27;|<span class="symbol">json_conf</span>&gt;</span><br><span class="line">$ <span class="symbol">pm2</span> <span class="symbol">delete</span>   &lt;<span class="symbol">app_name</span>|<span class="symbol">namespace</span>|<span class="symbol">id</span>|&#x27;<span class="symbol">all</span>&#x27;|<span class="symbol">json_conf</span>&gt;</span><br></pre></td></tr></table></figure>
<h4 id="Nodemon-热更新"><a href="#Nodemon-热更新" class="headerlink" title="Nodemon 热更新"></a><a href="https://github.com/remy/nodemon">Nodemon</a> 热更新</h4><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -g nodemon</span><br><span class="line">npm <span class="keyword">install</span> --save-dev nodemon</span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">nodemon</span> <span class="selector-tag">app</span><span class="selector-class">.js</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>PM2</tag>
        <tag>Nodemon</tag>
      </tags>
  </entry>
  <entry>
    <title>网页顶部进度条工具 NProgress</title>
    <url>/2021/01/31/vue/NProgress/</url>
    <content><![CDATA[<p><a href="https://ricostacruz.com/nprogress/">NProgress官网</a></p>
<p><a href="https://github.com/rstacruz/nprogress">Github</a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install <span class="comment">--save nprogress</span></span><br></pre></td></tr></table></figure>
<h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> NProgress <span class="keyword">from</span> <span class="string">&#x27;nprogress&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;nprogress/nprogress.css&#x27;</span></span><br></pre></td></tr></table></figure>
<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">NProgress</span>.</span></span>start<span class="literal">()</span> - 显示进度条</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">NProgress</span>.</span></span>set(<span class="number">0.4</span>) - 设置百分比 <span class="number">0.0</span>~<span class="number">1.0</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">NProgress</span>.</span></span>inc<span class="literal">()</span> - 稍微增加 但不会达到<span class="number">100</span>%</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">NProgress</span>.</span></span><span class="keyword">done</span><span class="literal">()</span> - 完成进度(进度条消失)</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="axios-响应调用"><a href="#axios-响应调用" class="headerlink" title="axios 响应调用"></a>axios 响应调用</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">axios.interceptors.request.use(<span class="built_in">config</span> =&gt; &#123;</span><br><span class="line">  // console.<span class="built_in">log</span>(<span class="string">&#x27;config&#x27;</span>, <span class="built_in">config</span>)</span><br><span class="line">  NProgress.start()</span><br><span class="line">  // <span class="built_in">config</span>.headers.Authorization = window.sessionStorage.getItem(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">config</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">axios.interceptors.response.use(<span class="built_in">config</span> =&gt; &#123;</span><br><span class="line">  NProgress.done()</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">config</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="router-js-跳转调用"><a href="#router-js-跳转调用" class="headerlink" title="router.js 跳转调用"></a>router.js 跳转调用</h4><figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">router.beforeEach((<span class="keyword">to</span>, from, <span class="keyword">next</span>) =&gt; &#123;</span><br><span class="line">  // <span class="keyword">to</span>要去的路径 form哪个路径跳转过来 <span class="keyword">next</span> 函数 放行  <span class="keyword">next</span>() <span class="keyword">next</span>(<span class="string">&#x27;/login&#x27;</span>)强制跳转</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">to</span><span class="built_in">.path</span> === <span class="string">&#x27;/login&#x27;</span>) <span class="keyword">return</span> <span class="keyword">next</span>()</span><br><span class="line">  const tokenStr = <span class="keyword">window</span>.sessionStorage.getItem(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (!tokenStr) <span class="keyword">return</span> <span class="keyword">next</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">  <span class="keyword">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.afterEach(transition =&gt; &#123;</span><br><span class="line">  NProgress.done();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>VUE</tag>
        <tag>NProgress</tag>
      </tags>
  </entry>
  <entry>
    <title>长列表性能优化 Object.freeze()</title>
    <url>/2021/01/31/vue/Object-freeze/</url>
    <content><![CDATA[<p><code>vue</code> 实现视图响应数据变化的原理: 是用过 <code>Object.defineProperty()</code>对数据进行劫持</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty">Object.defineProperty()</a></p>
<p>但如果组件只是<strong>纯粹的数据展示,不会有任何改变</strong>  则不需要 <code>vue</code>的数据劫持</p>
<p>通过<code>Object.freeze()</code>方法来冻结一个对象，一旦被冻结的对象就再也不能被修改了</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze">Object.freeze()</a></p>
<p>大量数据展示的情况下，这能够很明显的减少组件初始化的时间</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">export <span class="keyword">default</span> &#123;</span><br><span class="line">  data: () =&gt; (&#123;</span><br><span class="line">    users: &#123;&#125;</span><br><span class="line">  &#125;),</span><br><span class="line">  async created() &#123;</span><br><span class="line">    const users = await axios.<span class="keyword">get</span>(&quot;/api/users&quot;);</span><br><span class="line">    this.users = <span class="keyword">Object</span>.<span class="keyword">freeze</span>(users);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<blockquote>
<p><strong>这里只是冻结了<code>users</code>的值  若需要 重新激活数据 只需要<code>users</code>重新赋值即可</strong> </p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    users: []</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> users = <span class="keyword">await</span> axios.get(<span class="string">&quot;/api/users&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.users = <span class="built_in">Object</span>.freeze(users);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    <span class="comment">// 改变值不会触发视图响应</span></span><br><span class="line">    <span class="built_in">this</span>.users[<span class="number">0</span>] = newValue</span><br><span class="line">    <span class="comment">// 改变引用依然会触发视图响应</span></span><br><span class="line">    <span class="built_in">this</span>.users = newArray</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="转载声明-本文只做笔记-理解性质"><a href="#转载声明-本文只做笔记-理解性质" class="headerlink" title="转载声明  本文只做笔记+理解性质"></a>转载声明  本文只做笔记+理解性质</h4><p>作者：skinner<br>链接：<a href="https://juejin.cn/post/6844903848050589704">https://juejin.cn/post/6844903848050589704</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>VUE</tag>
        <tag>性能优化</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue中的 setInterval 与 clearInterval</title>
    <url>/2021/01/31/vue/Vue-Set-Clear-Interval/</url>
    <content><![CDATA[<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>vue3 删除了 <code>$on/$once/$off</code> API </p>
<h4 id="一般使用"><a href="#一般使用" class="headerlink" title="一般使用"></a>一般使用</h4><blockquote>
<p>缺点不利于维护  代码冗余</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;            </span><br><span class="line">    <span class="keyword">return</span> &#123;                              </span><br><span class="line">        timer: <span class="literal">null</span>         </span><br><span class="line">    &#125;        </span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">mouted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.timer = (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer);        </span><br><span class="line">    <span class="built_in">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="once-一次性监听器"><a href="#once-一次性监听器" class="headerlink" title="$once 一次性监听器"></a>$once 一次性监听器</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      DateTime: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created () &#123;</span><br><span class="line">    <span class="built_in">this</span>.timeInterval()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    timeInterval () &#123;</span><br><span class="line">      const timer = <span class="built_in">setInterval</span>(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.DateTime = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">      <span class="built_in">this</span>.$once(<span class="string">&#x27;hook:beforeDestroy&#x27;</span>, <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>VUE</tag>
        <tag>setInterval</tag>
      </tags>
  </entry>
  <entry>
    <title>前端可视化组件  V-Charts DataV 及自适应函数封装</title>
    <url>/2021/01/31/vue/dataV-VCharts/</url>
    <content><![CDATA[<h4 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h4><ul>
<li><p><a href="https://echarts.apache.org/zh/index.html">Echarts</a></p>
</li>
<li><p> <a href="http://datav.jiaminghi.com/">DataV</a>  </p>
</li>
<li><p> <a href="https://v-charts.js.org/#/">v-charts</a></p>
</li>
</ul>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> i v-charts echarts -S</span><br><span class="line"><span class="built_in">npm</span> install @jiaminghi/data-view</span><br></pre></td></tr></table></figure>
<h4 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h4><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> dataV <span class="keyword">from</span> <span class="string">&#x27;@jiaminghi/data-view&#x27;</span></span><br><span class="line">Vue.use(dataV)</span><br></pre></td></tr></table></figure>
<h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/v-charts/lib/index.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/v-charts/lib/style.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="按需导入"><a href="#按需导入" class="headerlink" title="按需导入"></a>按需导入</h4><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">import </span><span class="template-variable">&#123; borderBox1 &#125;</span><span class="xml"> from &#x27;@jiaminghi/data-view&#x27;</span></span><br><span class="line"><span class="xml">Vue.use(borderBox1)</span></span><br><span class="line"></span><br><span class="line"><span class="xml">import VeLine from &#x27;v-charts/lib/line.common&#x27;</span></span><br><span class="line"><span class="xml">import VeHistogram from &#x27;v-charts/lib/histogram.common&#x27;</span></span><br><span class="line"><span class="xml">Vue.component(VeLine.name, VeLine)</span></span><br><span class="line"><span class="xml">Vue.component(VeHistogram.name, VeHistogram)</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/v-charts/lib/line.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- -------------------------------------------------△△△△------------ --&gt;</span></span></span><br><span class="line"><span class="xml">components: </span><span class="template-variable">&#123; VeLine &#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="自适应"><a href="#自适应" class="headerlink" title="自适应"></a>自适应</h4><blockquote>
<p><strong>DataV全屏容器</strong></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dv-full-screen-container</span>&gt;</span>content<span class="tag">&lt;/<span class="name">dv-full-screen-container</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>$nextTick()  resize监听窗口变换</strong></p>
</blockquote>
 <figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">window.add<span class="constructor">EventListener(&#x27;<span class="params">resize</span>&#x27;, <span class="params">function</span> (<span class="params">e</span>)</span> &#123;</span><br><span class="line">  <span class="module-access"><span class="module"><span class="identifier">_this</span>.</span></span><span class="constructor">$nextTick(()</span> =&gt; &#123;</span><br><span class="line">    console.log(<span class="module-access"><span class="module"><span class="identifier">_this</span>.</span></span>$refs.pie2)</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">_this</span>.</span></span>key++</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="数据响应更新"><a href="#数据响应更新" class="headerlink" title="数据响应更新"></a>数据响应更新</h4><blockquote>
<p>官方</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;update-demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dv-percent-pond</span> <span class="attr">:config</span>=<span class="string">&quot;config&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:200px;height:100px;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&#x27;UpdateDemo&#x27;</span>,</span></span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      config: &#123;</span><br><span class="line">        value: 66,</span><br><span class="line">        lineDash: [10, 2]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="comment">// 更新数据的示例方法</span></span></span><br><span class="line">    updateHandler () &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> &#123; config &#125; = <span class="built_in">this</span></span></span><br><span class="line"></span><br><span class="line">      /**</span><br><span class="line">       * 只是这样做是无效</span><br><span class="line">       * config指向的内存地址没有发生变化</span><br><span class="line">       * 组件无法侦知数据变化</span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.config.value = <span class="number">90</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.config.lineDash = [<span class="number">10</span>, <span class="number">4</span>]</span></span><br><span class="line"></span><br><span class="line">      /**</span><br><span class="line">       * 使用ES6拓展运算符生成新的props对象</span><br><span class="line">       * 组件侦知数据变化 自动刷新状态</span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.config = &#123; ...this.config &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="进一步的自适应封装"><a href="#进一步的自适应封装" class="headerlink" title="进一步的自适应封装"></a>进一步的自适应封装</h4><blockquote>
<p>至于为什么这么写  额 我也忘了 但效果是起到了 嘿嘿</p>
<p><code>v-charts</code> 封装的组件 限制于必须设定固定高度 height  导致在不同尺寸的屏幕下适配效果很差 </p>
<p>基于需求 封装了 <code>RESIZE</code>函数 –联系上文 自适应 <code>$nextTick()</code> 和 <code>resize</code> 的重复代码</p>
<p><code>callBack</code>来执行回调函数  也就是在 <code>监听到窗口变化后</code> 执行的<code>响应操作</code> </p>
<p>例如<code>JS</code>实现动态的高度设置  <code>:key=&quot;key&quot;</code>的动态刷新等</p>
<p>函数在调用时会执行一次回调  一般用于<code>v-charts</code>组件的<strong>高度初始化</strong> </p>
<p>进而设置窗口变化监听  因为<strong>组件在加载时<code>resize</code>是不会有响应的</strong></p>
<p>代码性质 请 <strong>放置于</strong>  <strong>mounted</strong> 中</p>
<p><code>$once</code>将会在页面<code>beforeDestroy</code>时进行监听器卸载    </p>
</blockquote>
<p><strong>resizeFuc.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自适应</span></span><br><span class="line"><span class="comment">// 第一个参数 this (this域指向)</span></span><br><span class="line"><span class="comment">// callBack 为 data赋值代码 用于 DOM 刷新</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">RESIZE</span> (<span class="params">_, callBack</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _this = _</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">ACTION</span> (<span class="params">_this</span>) </span>&#123;</span><br><span class="line">    _this.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> callBack &amp;&amp; callBack()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  callBack &amp;&amp; callBack()</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    ACTION(_this)</span><br><span class="line">  &#125;)</span><br><span class="line">  _this.$once(<span class="string">&#x27;hook:beforeDestroy&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">&#x27;resize&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      ACTION(_this)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>页面调用</strong></p>
<blockquote>
<p><code>&lt;dv-border-box-12&gt;</code><strong>恰好 高度自适应</strong>  只需要获取他的高度来微调样式</p>
</blockquote>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; RESIZE &#125; <span class="keyword">from</span> <span class="string">&#x27;@/util/resizeFuc&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dv-border-box-12</span> <span class="attr">id</span>=<span class="string">&quot;div_quality&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ve-histogram</span> <span class="attr">:height</span>=<span class="string">&quot;height+&#x27;px&#x27;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dv-border-box-12</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&#x27;UpdateDemo&#x27;</span>,</span></span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      height: <span class="string">&#x27;260&#x27;</span>,</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line"><span class="javascript">    RESIZE(<span class="built_in">this</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.height = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div_quality&#x27;</span>).offsetHeight + <span class="number">40</span></span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>或者上文例子 <code>key</code> 的更新</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;humidity_container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dv-water-level-pond</span> <span class="attr">:key</span>=<span class="string">&quot;key&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; RESIZE &#125; <span class="keyword">from</span> <span class="string">&#x27;@/util/resizeFuc&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      key: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line"><span class="javascript">    RESIZE(<span class="built_in">this</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.key++</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>VUE</tag>
        <tag>DataV</tag>
        <tag>V-Charts</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam API Info</title>
    <url>/2021/01/29/api/steam-info/</url>
    <content><![CDATA[<h4 id="汇率接口"><a href="#汇率接口" class="headerlink" title="汇率接口"></a>汇率接口</h4><p><a href="https://esapi.isthereanydeal.com/v01/rates/?to=CNY">https://esapi.isthereanydeal.com/v01/rates/?to=CNY</a></p>
<!--相对于 CNY 的倍率-->

<table>
<thead>
<tr>
<th align="center">result</th>
<th align="center">data</th>
</tr>
</thead>
<tbody><tr>
<td align="center">success</td>
<td align="center">Object</td>
</tr>
</tbody></table>
<h4 id="游戏基本信息"><a href="#游戏基本信息" class="headerlink" title="游戏基本信息"></a>游戏基本信息</h4><p><a href="https://store.steampowered.com/apphoverpublic/1366540?review_score_preference=0&amp;l=schinese&amp;pagev6=true">https://store.steampowered.com/apphoverpublic/1366540?review_score_preference=0&amp;l=schinese&amp;pagev6=true</a></p>
<!--XML-->

<ol>
<li>游戏名称</li>
<li>发行日期</li>
<li>总评测信息</li>
<li>游戏标签</li>
<li>商店展示截图URL</li>
</ol>
<a id="more"></a> 

<h4 id="捆绑包信息"><a href="#捆绑包信息" class="headerlink" title="捆绑包信息"></a>捆绑包信息</h4><p><a href="https://store.steampowered.com/bundle/18623/hover_public/?review_score_preference=0&amp;l=schinese&amp;pagev6=true">https://store.steampowered.com/bundle/18623/hover_public/?review_score_preference=0&amp;l=schinese&amp;pagev6=true</a></p>
<!--XML-->

<ol>
<li>捆绑包包含物品数量</li>
<li>其他内容同上</li>
</ol>
<h4 id="游戏价格"><a href="#游戏价格" class="headerlink" title="游戏价格"></a>游戏价格</h4><p><a href="https://store.steampowered.com/api/packagedetails/?packageids=479270&amp;cc=CN">https://store.steampowered.com/api/packagedetails/?packageids=479270&amp;cc=CN</a></p>
<p>[^packageids]: sub 非appid</p>
<blockquote>
<p>apps</p>
</blockquote>
<blockquote>
<p>price       /100</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;479270&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;success&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Dyson Sphere Program&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;page_image&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/subs/479270/header.jpg?t=1611212385&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;small_logo&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/subs/479270/capsule_231x87.jpg?t=1611212385&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;apps&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">1366540</span>,</span><br><span class="line">          <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;戴森球计划&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;currency&quot;</span>: <span class="string">&quot;CNY&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;initial&quot;</span>: <span class="number">7000</span>,</span><br><span class="line">        <span class="attr">&quot;final&quot;</span>: <span class="number">6300</span>,</span><br><span class="line">        <span class="attr">&quot;discount_percent&quot;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">&quot;individual&quot;</span>: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;platforms&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;windows&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;mac&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;linux&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;controller&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;full_gamepad&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;release_date&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;coming_soon&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2021年1月21日&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="游戏详情"><a href="#游戏详情" class="headerlink" title="游戏详情"></a>游戏详情</h4><p><a href="https://store.steampowered.com/api/appdetails/?appids=1366540&amp;filters=support_info">https://store.steampowered.com/api/appdetails/?appids=1366540&amp;filters=support_info</a></p>
<ol>
<li>游戏名称 appid等</li>
</ol>
<p>   [^steam_appid]: </p>
<ol start="2">
<li><p>DLC 及对应appid</p>
<p>[^dlc]: </p>
</li>
<li><p>价格折扣等信息</p>
<p>[^price_overview]: </p>
</li>
<li><p>游戏类别 </p>
</li>
</ol>
<ol start="5">
<li><p>游戏介绍</p>
<p>[^detailed_description]: </p>
</li>
<li><p>语言支持</p>
<p>[^supported_languages]: </p>
</li>
<li><p>系统需求</p>
<p>[^pc_requirements , mac_requirements , linux_requirements]: </p>
</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;1366540&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;success&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;game&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;戴森球计划&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;steam_appid&quot;</span>: <span class="number">1366540</span>,</span><br><span class="line">      <span class="attr">&quot;required_age&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;is_free&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;dlc&quot;</span>: [</span><br><span class="line">        <span class="number">1523190</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;detailed_description&quot;</span>: <span class="string">&quot;&lt;h1&gt;关注我们&lt;/h1&gt;&lt;p&gt;想要了解《戴森球计划》的最新资讯吗？关注我们：&lt;br&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;官方微博：&lt;a href=\&quot;https://steamcommunity.com/linkfilter/?url=https://weibo.com/gameragame\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener\&quot;  &gt;GameraGame&lt;/a&gt;、&lt;a href=\&quot;https://steamcommunity.com/linkfilter/?url=https://weibo.com/u/7333556012\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener\&quot;  &gt;戴森球计划游戏制作组&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;官方玩家4群：1081472273&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;官方BUG反馈群：777178167&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;br&gt;&lt;h1&gt;关于游戏&lt;/h1&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-游戏介绍.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;《戴森球计划》是一款融合了太空、自动化工厂、冒险、探索等元素的科幻题材沙盒建造类游戏。在未来，人类踏入高级文明的行列之时，科技的强大带来了飞速的发展，虚拟现实迭代了空间与时间。人类创造了超级计算机——“主脑”，以期待利用其强大的计算能力来进一步扩大虚拟世界的运用。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/宇宙飞行动态图-0.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;作为玩家的你，加入了空间管理联盟COSMO开启的一项代号为“戴森球计划”的工程项目，建造戴森球，为“主脑”提供持续稳定的能量。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/自动化生产动态图-4.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;在游戏中，玩家将从上帝视角进行工厂建造及资源管理。在这一过程中，你势必会遭遇诸多困难，毕竟宇宙之大，什么都可能发生。然而，你的创造力与想象力将会助你达成这一宏大的目标，整个银河势必将在你的规划下成为人类文明前进的基石。 &lt;br&gt;&lt;br&gt;你可以不断解锁科技，一步一步打造专属你的戴森球；&lt;br&gt;也可以探索宇宙，发现宇宙珍奇，踏遍星辰大海；&lt;br&gt;或是架设星际物流系统，串联出庞大的工业帝国；&lt;br&gt;亦或是不断优化设计，让生产流水线的效率更高。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-游戏特色.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;*随机生成的星图，每一局都是独一无二的宇宙。&lt;br&gt;*更加微观的建造戴森球，从一个零件开始构架。&lt;br&gt;*千变万化的宇宙生态，中子星、白矮星、红巨星，甚至黑洞。&lt;br&gt;*不止于地表的自动化生产流水线，跨越星系运输物资。&lt;br&gt;*多种可自主定制的设定，打造属于你自己的戴森球计划。&lt;br&gt;*球形地表，完美表现在一颗星球之上完成建设的特色。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-自动生产流水线.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;将资源通过传送带串联在各个建筑之间，形成高效的流水线生产，让科技自主的前进。同时在建造过程中建筑会自动吸附网格，铺设流水线时可以利用建筑网格吸附功能自动对齐建筑，大大提高建造的效率，形成大规模的自动化流水线。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/自动化生产动态图-2.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-星际运输.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;跨越地表运输的限制，组建你的星际运输大队，将另一个星球的物资传递过来，集合全宇宙的力量来快速发展自己。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/星际物流运输动态图-5.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-独一无二的宇宙.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;每一次游戏的开始都会随机生成全新的星图，拥有不同的星球种类，矿物分布。每一个星球的地形也会变化。在这个千变万化的宇宙中去完全属于你自己的“戴森球计划”。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/星球不动图.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;同时游戏中直接展现了各式各样的星球和天象，中子星、白矮星、红巨星、气态星球、日冕、永昼永夜等，统统都可以在这里看到。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/星球三合一.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-关于我们.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;我们是来自于中国重庆的五人团队，出于对科幻的喜爱，我们制作了这款《戴森球计划》。或许以往的戴森球还存在于宏观的游戏世界中，那么这一次我们希望玩家可以更加微观的去一步一步建造戴森球，从一个零件到最终庞大宏伟的产物。&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;about_the_game&quot;</span>: <span class="string">&quot;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-游戏介绍.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;《戴森球计划》是一款融合了太空、自动化工厂、冒险、探索等元素的科幻题材沙盒建造类游戏。在未来，人类踏入高级文明的行列之时，科技的强大带来了飞速的发展，虚拟现实迭代了空间与时间。人类创造了超级计算机——“主脑”，以期待利用其强大的计算能力来进一步扩大虚拟世界的运用。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/宇宙飞行动态图-0.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;作为玩家的你，加入了空间管理联盟COSMO开启的一项代号为“戴森球计划”的工程项目，建造戴森球，为“主脑”提供持续稳定的能量。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/自动化生产动态图-4.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;在游戏中，玩家将从上帝视角进行工厂建造及资源管理。在这一过程中，你势必会遭遇诸多困难，毕竟宇宙之大，什么都可能发生。然而，你的创造力与想象力将会助你达成这一宏大的目标，整个银河势必将在你的规划下成为人类文明前进的基石。 &lt;br&gt;&lt;br&gt;你可以不断解锁科技，一步一步打造专属你的戴森球；&lt;br&gt;也可以探索宇宙，发现宇宙珍奇，踏遍星辰大海；&lt;br&gt;或是架设星际物流系统，串联出庞大的工业帝国；&lt;br&gt;亦或是不断优化设计，让生产流水线的效率更高。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-游戏特色.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;*随机生成的星图，每一局都是独一无二的宇宙。&lt;br&gt;*更加微观的建造戴森球，从一个零件开始构架。&lt;br&gt;*千变万化的宇宙生态，中子星、白矮星、红巨星，甚至黑洞。&lt;br&gt;*不止于地表的自动化生产流水线，跨越星系运输物资。&lt;br&gt;*多种可自主定制的设定，打造属于你自己的戴森球计划。&lt;br&gt;*球形地表，完美表现在一颗星球之上完成建设的特色。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-自动生产流水线.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;将资源通过传送带串联在各个建筑之间，形成高效的流水线生产，让科技自主的前进。同时在建造过程中建筑会自动吸附网格，铺设流水线时可以利用建筑网格吸附功能自动对齐建筑，大大提高建造的效率，形成大规模的自动化流水线。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/自动化生产动态图-2.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-星际运输.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;跨越地表运输的限制，组建你的星际运输大队，将另一个星球的物资传递过来，集合全宇宙的力量来快速发展自己。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/星际物流运输动态图-5.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-独一无二的宇宙.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;每一次游戏的开始都会随机生成全新的星图，拥有不同的星球种类，矿物分布。每一个星球的地形也会变化。在这个千变万化的宇宙中去完全属于你自己的“戴森球计划”。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/星球不动图.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;同时游戏中直接展现了各式各样的星球和天象，中子星、白矮星、红巨星、气态星球、日冕、永昼永夜等，统统都可以在这里看到。&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/星球三合一.gif?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;img src=\&quot;https://media.st.dl.pinyuncloud.com/steam/apps/1366540/extras/banner-chs-关于我们.jpg?t=1611695626\&quot; crossorigin=\&quot;anonymous\&quot;/&gt;&lt;br&gt;我们是来自于中国重庆的五人团队，出于对科幻的喜爱，我们制作了这款《戴森球计划》。或许以往的戴森球还存在于宏观的游戏世界中，那么这一次我们希望玩家可以更加微观的去一步一步建造戴森球，从一个零件到最终庞大宏伟的产物。&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;short_description&quot;</span>: <span class="string">&quot;浩瀚无垠的宇宙，未知的征程，作为戴森球计划的一名工程师，你将前往陌生的星系，建造戴森球。从一无所有白手起家，采集资源，规划设计生产线，逐步实现全自动化，将你的工厂从一个小作坊，发展成为庞大的跨星系工业帝国。探索未知的星球，发现珍奇，让你的足迹遍布星辰大海。&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;supported_languages&quot;</span>: <span class="string">&quot;简体中文, 英语&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;header_image&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/header_schinese.jpg?t=1611695626&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;website&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">&quot;pc_requirements&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;minimum&quot;</span>: <span class="string">&quot;&lt;strong&gt;最低配置:&lt;/strong&gt;&lt;br&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;需要 64 位处理器和操作系统&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;操作系统:&lt;/strong&gt; Windows 7(64-Bit)&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;处理器:&lt;/strong&gt; i3-530 2.93GHZ 2 Core&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;内存:&lt;/strong&gt; 4 GB RAM&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;显卡:&lt;/strong&gt; Dedicated graphics card, GTX 750 Ti 2GB&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;DirectX 版本:&lt;/strong&gt; 11&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;存储空间:&lt;/strong&gt; 需要 3 GB 可用空间&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;附注事项:&lt;/strong&gt; GPU must support Shader Model 5.0&lt;/li&gt;&lt;/ul&gt;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;recommended&quot;</span>: <span class="string">&quot;&lt;strong&gt;推荐配置:&lt;/strong&gt;&lt;br&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;需要 64 位处理器和操作系统&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;操作系统:&lt;/strong&gt; Windows 10(64-Bit)&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;处理器:&lt;/strong&gt; i7-7700k 4.2GHz 4 Core&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;内存:&lt;/strong&gt; 16 GB RAM&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;显卡:&lt;/strong&gt; Dedicated graphics card, GTX 1660 6GB&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;DirectX 版本:&lt;/strong&gt; 11&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;存储空间:&lt;/strong&gt; 需要 10 GB 可用空间&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;附注事项:&lt;/strong&gt; GPU must support Shader Model 5.0. Display Resolution 1080p +&lt;/li&gt;&lt;/ul&gt;&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;mac_requirements&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;minimum&quot;</span>: <span class="string">&quot;&lt;strong&gt;最低配置:&lt;/strong&gt;&lt;br&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;需要 64 位处理器和操作系统&lt;/li&gt;&lt;/ul&gt;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;recommended&quot;</span>: <span class="string">&quot;&lt;strong&gt;推荐配置:&lt;/strong&gt;&lt;br&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;需要 64 位处理器和操作系统&lt;/li&gt;&lt;/ul&gt;&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot; &quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;minimum&quot;</span>: <span class="string">&quot;&lt;strong&gt;最低配置:&lt;/strong&gt;&lt;br&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;需要 64 位处理器和操作系统&lt;/li&gt;&lt;/ul&gt;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;recommended&quot;</span>: <span class="string">&quot;&lt;strong&gt;推荐配置:&lt;/strong&gt;&lt;br&gt;&lt;ul class=\&quot;bb_ul\&quot;&gt;&lt;li&gt;需要 64 位处理器和操作系统&lt;/li&gt;&lt;/ul&gt;&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;developers&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;Youthcat Studio&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;publishers&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;Gamera Game&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;price_overview&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;currency&quot;</span>: <span class="string">&quot;CNY&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;initial&quot;</span>: <span class="number">7000</span>,</span><br><span class="line">        <span class="attr">&quot;final&quot;</span>: <span class="number">6300</span>,</span><br><span class="line">        <span class="attr">&quot;discount_percent&quot;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">&quot;initial_formatted&quot;</span>: <span class="string">&quot;¥ 70&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;final_formatted&quot;</span>: <span class="string">&quot;¥ 63&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;packages&quot;</span>: [</span><br><span class="line">        <span class="number">479270</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;package_groups&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;购买 戴森球计划&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;selection_text&quot;</span>: <span class="string">&quot;选择一个购买选项&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;save_text&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;display_type&quot;</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="attr">&quot;is_recurring_subscription&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;subs&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">&quot;packageid&quot;</span>: <span class="number">479270</span>,</span><br><span class="line">              <span class="attr">&quot;percent_savings_text&quot;</span>: <span class="string">&quot;-10% &quot;</span>,</span><br><span class="line">              <span class="attr">&quot;percent_savings&quot;</span>: <span class="number">0</span>,</span><br><span class="line">              <span class="attr">&quot;option_text&quot;</span>: <span class="string">&quot;Dyson Sphere Program - &lt;span class=\&quot;discount_original_price\&quot;&gt;¥ 70&lt;/span&gt; ¥ 63&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;option_description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;can_get_free_license&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;is_free_license&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">&quot;price_in_cents_with_discount&quot;</span>: <span class="number">6300</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;platforms&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;windows&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;mac&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;linux&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;categories&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;单人&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">42</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;在平板上远程畅玩&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;genres&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;23&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;独立&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;28&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;模拟&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;策略&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;70&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;抢先体验&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;screenshots&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_ca1c8ba11e539cbeb8f4d91f6685b0fa01ddf705.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_ca1c8ba11e539cbeb8f4d91f6685b0fa01ddf705.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_36242c2930a50355982a0da128f37e23e25a1047.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_36242c2930a50355982a0da128f37e23e25a1047.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_602b6ca003277c4a70f63bd723a494a5558e1aee.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_602b6ca003277c4a70f63bd723a494a5558e1aee.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_7b635ae1ca6d88b52fca183407f06cfd94850b26.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_7b635ae1ca6d88b52fca183407f06cfd94850b26.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">4</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_b5fdcae44ab61e86820d156a74bd030b4782b8a8.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_b5fdcae44ab61e86820d156a74bd030b4782b8a8.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_475933730894ab89e3a8b961f8fc18399ee2a1df.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_475933730894ab89e3a8b961f8fc18399ee2a1df.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">6</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_995e50fbac3e936624d0bd4d1493140f77f78d11.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_995e50fbac3e936624d0bd4d1493140f77f78d11.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_1b22058e7b58db0f2d9770757974af6a7fb719c0.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_1b22058e7b58db0f2d9770757974af6a7fb719c0.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">8</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_9e06789bd41f956531e946597c81d57fce862ad4.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_9e06789bd41f956531e946597c81d57fce862ad4.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">9</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_da7276928ed645446501c3465ec0aaeb24998826.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_da7276928ed645446501c3465ec0aaeb24998826.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">10</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_74fd2f87cc4632c6a6653d40d143d5d6f26dedd3.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_74fd2f87cc4632c6a6653d40d143d5d6f26dedd3.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">11</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_5a7b3dac5064a6ac09ddef5d9554987b47fa4fbe.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_5a7b3dac5064a6ac09ddef5d9554987b47fa4fbe.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">12</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_1f699b2ba7ce5025064050cf5498f6a576b89d31.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_1f699b2ba7ce5025064050cf5498f6a576b89d31.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">13</span>,</span><br><span class="line">          <span class="attr">&quot;path_thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_23c17fdd4a2ab51f48d7c2a64cdde92104dbac99.600x338.jpg?t=1611695626&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;path_full&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_23c17fdd4a2ab51f48d7c2a64cdde92104dbac99.1920x1080.jpg?t=1611695626&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;movies&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">256817738</span>,</span><br><span class="line">          <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;2_EN1&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/256817738/movie.293x165.jpg?t=1610275128&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;webm&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;480&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817738/movie480_vp9.webm?t=1610275128&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;max&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817738/movie_max_vp9.webm?t=1610275128&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;mp4&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;480&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817738/movie480.mp4?t=1610275128&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;max&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817738/movie_max.mp4?t=1610275128&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;highlight&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">256817722</span>,</span><br><span class="line">          <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;1_CN&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/256817722/movie.293x165.jpg?t=1610263789&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;webm&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;480&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817722/movie480_vp9.webm?t=1610263789&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;max&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817722/movie_max_vp9.webm?t=1610263789&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;mp4&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;480&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817722/movie480.mp4?t=1610263789&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;max&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256817722/movie_max.mp4?t=1610263789&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;highlight&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="number">256800538</span>,</span><br><span class="line">          <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;new trailer&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;thumbnail&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/256800538/movie.jpg?t=1600949954&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;webm&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;480&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256800538/movie480_vp9.webm?t=1600949954&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;max&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256800538/movie_max_vp9.webm?t=1600949954&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;mp4&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;480&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256800538/movie480.mp4?t=1600949954&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;max&quot;</span>: <span class="string">&quot;http://cdn.akamai.steamstatic.com/steam/apps/256800538/movie_max.mp4?t=1600949954&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;highlight&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;recommendations&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">5633</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;release_date&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;coming_soon&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2021年1月21日&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;support_info&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://www.gameragame.com/&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;email&quot;</span>: <span class="string">&quot;contact@gameragame.com&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;background&quot;</span>: <span class="string">&quot;https://cdn.akamai.steamstatic.com/steam/apps/1366540/page_bg_generated_v6b.jpg?t=1611695626&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;content_descriptors&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;ids&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;notes&quot;</span>: <span class="literal">null</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="游戏在线人数"><a href="#游戏在线人数" class="headerlink" title="游戏在线人数"></a>游戏在线人数</h4><p><a href="https://steamdb.info/api/GetCurrentPlayers/?appid=1366540&amp;source=extension_steam_store">https://steamdb.info/api/GetCurrentPlayers/?appid=1366540&amp;source=extension_steam_store</a></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;success&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;CurrentPlayers&quot;</span>: <span class="number">35434</span>,</span><br><span class="line">    <span class="attr">&quot;MaxPlayers&quot;</span>: <span class="number">37030</span>,</span><br><span class="line">    <span class="attr">&quot;MaxDailyPlayers&quot;</span>: <span class="number">37030</span>,</span><br><span class="line">    <span class="attr">&quot;Followers&quot;</span>: <span class="number">47465</span>,</span><br><span class="line">    <span class="attr">&quot;LastDepotUpdate&quot;</span>: <span class="string">&quot;26 January 2021 (1 day ago)&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="第三方API-amp-游戏价格"><a href="#第三方API-amp-游戏价格" class="headerlink" title="第三方API  &amp; 游戏价格"></a>第三方API  &amp; 游戏价格</h4><p><a href="https://esapi.isthereanydeal.com/v01/prices/?cc=CN&amp;appids=&amp;subids=479270&amp;bundleids=&amp;coupon=true">https://esapi.isthereanydeal.com/v01/prices/?cc=CN&amp;appids=&amp;subids=479270&amp;bundleids=&amp;coupon=true</a></p>
<!--对应参数查询-->

<p>[^bundleids]: </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;result&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;sub/479270&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;price&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;store&quot;</span>: <span class="string">&quot;Steam&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;cut&quot;</span>: <span class="number">10</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span>: <span class="number">63</span>,</span><br><span class="line">          <span class="attr">&quot;price_formatted&quot;</span>: <span class="string">&quot;&amp;yen;63.00&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://store.steampowered.com/app/1366540/&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;drm&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;steam&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;lowest&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;store&quot;</span>: <span class="string">&quot;Steam&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;cut&quot;</span>: <span class="number">10</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span>: <span class="number">63</span>,</span><br><span class="line">          <span class="attr">&quot;price_formatted&quot;</span>: <span class="string">&quot;&amp;yen;63.00&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://store.steampowered.com/app/1366540/&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;recorded&quot;</span>: <span class="number">1611214510</span>,</span><br><span class="line">          <span class="attr">&quot;recorded_formatted&quot;</span>: <span class="string">&quot;6 days ago&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;bundles&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;count&quot;</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="attr">&quot;live&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;urls&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;info&quot;</span>: <span class="string">&quot;https://isthereanydeal.com/game/dysonsphereprogramdaisenqiujihua/info/&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;history&quot;</span>: <span class="string">&quot;https://isthereanydeal.com/game/dysonsphereprogramdaisenqiujihua/history/&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;bundles&quot;</span>: <span class="string">&quot;https://isthereanydeal.com/specials/#/filter:search/dysonsphereprogramdaisenqiujihua&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;.meta&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;cn&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;country&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;currency&quot;</span>: <span class="string">&quot;CNY&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="账户消息通知"><a href="#账户消息通知" class="headerlink" title="账户消息通知"></a>账户消息通知</h4><p><a href="https://steamcommunity.com/actions/GetNotificationCounts">https://steamcommunity.com/actions/GetNotificationCounts</a></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;notifications&quot;</span>:&#123;<span class="attr">&quot;4&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;5&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;6&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;8&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;9&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;1&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;2&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;3&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;10&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;11&quot;</span>:<span class="number">0</span>&#125;&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">GET</span></span><br></pre></td></tr></table></figure>


<h4 id="热销榜"><a href="#热销榜" class="headerlink" title="热销榜"></a>热销榜</h4><p><a href="https://store.steampowered.com/search/results/?filter=globaltopsellers&amp;count=25&amp;start=0&amp;infinite=0&amp;sort_by=_ASC">https://store.steampowered.com/search/results/?filter=globaltopsellers&amp;count=25&amp;start=0&amp;infinite=0&amp;sort_by=_ASC</a></p>
<p>[^filter]: globaltopsellers 全球<br>[^count]: 返回总数 默认50 最小25<br>[^start]: 开始区间 默认0<br>[^infinite]: 默认0–渲染   1–带dom文本<br>[^sort_by]: 排序方式  ASC–相关性  Reviews_DESC–用户评测  Released_DESC–发行日期  Name_ASC–名称 Price_ASC–价格低到高  Price_DESC–价格高到低</p>
<h4 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h4><p><a href="https://steam-chat.com/miniprofile/870906664/json">https://steam-chat.com/miniprofile/870906664/json</a></p>
<p>[^AccountID]: miniprofile/*/json  <a href="https://steamdb.info/calculator/76561198831172392/">https://steamdb.info/calculator/76561198831172392/</a>  查询</p>
<ol>
<li>等级</li>
<li>昵称</li>
<li>勋章 头像 边框 图片等</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;level&quot;</span>: <span class="number">44</span>,</span><br><span class="line">  <span class="attr">&quot;level_class&quot;</span>: <span class="string">&quot;friendPlayerLevel lvl_40&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;avatar_url&quot;</span>: <span class="string">&quot;https://media.st.dl.pinyuncloud.com/steamcommunity/public/images/avatars/e5/e5c3c6b761588e5122dcaf5bb7aa382f2660cc8e_full.jpg&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;persona_name&quot;</span>: <span class="string">&quot;领北&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;favorite_badge&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Emotion1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;xp&quot;</span>: <span class="string">&quot;100&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;level&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;https://media.st.dl.pinyuncloud.com/steamcommunity/public/images/items/1292790/58d1d947a384a0a855dcf95fae7ac106fb1acfe1.png&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;avatar_frame&quot;</span>: <span class="string">&quot;https://media.st.dl.pinyuncloud.com/steamcommunity/public/images/items/1492660/06bb85cd5f39a963a39ae9327ea4eb7da5cd30d4.png&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>STEAM</category>
      </categories>
      <tags>
        <tag>STEAM</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title>keylol-API-Info</title>
    <url>/2021/02/04/api/keylol-API-Info/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="08dc0de33f3b5684f365c62716f351ee605f17d196840bf283d56dfdb2a64d30">0e3318570b0e2807598a047fa52a53bce3046cc35ba3c583bb7908ef2b65196e587daaeef884362042fe23a8fa67f55f243af8acdd714658082e62f5802014358a6e0741ea1311c2fbf79c58865a89149c524abb8c0995dc62331ae7e312b3e38541ff35c055531f3d75858cbea1d63e64d2cf3ea4dbecdfc8558884219502db1cb60f6558d68b2b3fbb43b819e4197728ba60d8f66d0cdc92ea645653b5b5dfd40d038c2ca68684c983175b69b12537344d14cf36c1f580c6585dbcb7d968d4b3fcecdde78e6278a8b0c75b0ee10e7e425366548d77487949f07f09ab35e80670e13c64672ed2cc9630891ee5f4903299b663a734575b372009369faeee3d9733187d18fae917d05267b55b4fb9feee493102644fca7239727e9f0683f05923436024d06d1678d5d8a38fca5e06a4344073f6e14426b81de1c17085dd108bd14c7abe6f6c2c768b5c8bc60b680b4bab4e6b4cda65843ac8fd0b2455d2a05f7263dcebf7e86bc9795cbe40b93a78383027036c2deeade88056e364d701efcae14a465d997e8dd9d7fc9f76148ce3ec823a2482235cdd106f2627dae67603fca2c18e32bac49bbbdff63f59dfde6be901a1d6af6acb1179f404bbdfe5e54a02df009d04a47c196d2f73db57c7318a317fe4e2e7e5fe53380a6b4a9f5b903b695c5e510c7524d02416a03793a824fc12c8ebd753117772509e315eb8596cabc53aaf57cb8eddce802ada3796fcf7415318c515569e1e86092fe606a1d95a8819441498778a2d495eb0f88d27e67712e81d330c05d763660bef862b2645b804d0d9f278aa426205139ae97bc52f99bb2a39</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>keylol</category>
      </categories>
      <tags>
        <tag>keylol</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title>Object.defineProperty() 数据监听</title>
    <url>/2021/04/13/JavaScript/Object_defineProperty/</url>
    <content><![CDATA[<p><strong>注意</strong></p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">_<span class="built_in">count</span> === <span class="built_in">count</span></span><br></pre></td></tr></table></figure>
<p>因为已经对 ``count<code> </code>监听</p>
<p><code>setter</code> 不可直接对<code>count</code> 赋值 会陷入死循环 set</p>
<p> <code>getter </code> return 同理也不能 包括<code>return this;</code>  </p>
<p>使用 <code>_count</code>  可以达到赋值效果</p>
<p><code>Object.keys()</code> 打印 <code>initData</code> 只打印实例 即 <code>_</code>开头键值</p>
<p>vue3 使用 <code>Proxy()</code>  来解决数组监听等问题</p>
<a id="more"></a>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> initData= <span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._count= GM_getValue(<span class="string">&quot;count&quot;</span>) || <span class="number">300</span></span><br><span class="line">        <span class="built_in">this</span>._slow= GM_getValue(<span class="string">&quot;slow&quot;</span>) || <span class="number">0.7</span></span><br><span class="line">        <span class="built_in">this</span>._fast= GM_getValue(<span class="string">&quot;fast&quot;</span>) || <span class="number">0.75</span></span><br><span class="line">        <span class="built_in">this</span>._timeout= GM_getValue(<span class="string">&quot;timeout&quot;</span>) || <span class="number">3</span></span><br><span class="line">        <span class="built_in">this</span>._check= GM_getValue(<span class="string">&quot;check&quot;</span>) || <span class="number">2</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;diaoy&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(initData)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> initData)&#123;</span><br><span class="line">        key=key.slice(<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(initData,<span class="string">`<span class="subst">$&#123;key&#125;</span>`</span>,&#123;</span><br><span class="line">            <span class="function"><span class="title">set</span>(<span class="params">newVal</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`setter <span class="subst">$&#123;key&#125;</span>: `</span>,newVal)</span><br><span class="line">                GM_setValue(<span class="string">`<span class="subst">$&#123;key&#125;</span>`</span>,newVal-<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                <span class="built_in">this</span>[<span class="string">`_<span class="subst">$&#123;key&#125;</span>`</span>]=newVal-<span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`getter <span class="subst">$&#123;key&#125;</span>: `</span>,<span class="built_in">this</span>[<span class="string">`_<span class="subst">$&#123;key&#125;</span>`</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>[<span class="string">`_<span class="subst">$&#123;key&#125;</span>`</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(initData)</span><br></pre></td></tr></table></figure>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;_coun<span class="variable">t:</span> <span class="number">202</span>, _slo<span class="variable">w:</span> <span class="number">0.71</span>, _fas<span class="variable">t:</span> <span class="number">0.75</span>, _timeou<span class="variable">t:</span> <span class="number">3</span>, _check: <span class="number">2</span>, …&#125;</span><br><span class="line">_check: <span class="number">2</span></span><br><span class="line">_coun<span class="variable">t:</span> <span class="number">202</span></span><br><span class="line">_fas<span class="variable">t:</span> <span class="number">0.75</span></span><br><span class="line">_slo<span class="variable">w:</span> <span class="number">0.71</span></span><br><span class="line">_timeou<span class="variable">t:</span> <span class="number">3</span></span><br><span class="line">check: (...)</span><br><span class="line">coun<span class="variable">t:</span> (...)</span><br><span class="line">fas<span class="variable">t:</span> (...)</span><br><span class="line">slo<span class="variable">w:</span> (...)</span><br><span class="line">timeou<span class="variable">t:</span> (...)</span><br><span class="line"><span class="built_in">get</span> check: ƒ ()</span><br><span class="line"><span class="keyword">set</span> check: ƒ <span class="keyword">set</span>(newVal)</span><br><span class="line"><span class="built_in">get</span> coun<span class="variable">t:</span> ƒ ()</span><br><span class="line"><span class="keyword">set</span> coun<span class="variable">t:</span> ƒ <span class="keyword">set</span>(newVal)</span><br><span class="line"><span class="built_in">get</span> fas<span class="variable">t:</span> ƒ ()</span><br><span class="line"><span class="keyword">set</span> fas<span class="variable">t:</span> ƒ <span class="keyword">set</span>(newVal)</span><br><span class="line"><span class="built_in">get</span> slo<span class="variable">w:</span> ƒ ()</span><br><span class="line"><span class="keyword">set</span> slo<span class="variable">w:</span> ƒ <span class="keyword">set</span>(newVal)</span><br><span class="line"><span class="built_in">get</span> timeou<span class="variable">t:</span> ƒ ()</span><br><span class="line"><span class="keyword">set</span> timeou<span class="variable">t:</span> ƒ <span class="keyword">set</span>(newVal)</span><br><span class="line">__proto__: Object</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Object.defineProperty()</title>
    <url>/2021/04/13/JavaScript/post/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> initData= <span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._count= GM_getValue(<span class="string">&quot;count&quot;</span>) || <span class="number">300</span></span><br><span class="line">        <span class="built_in">this</span>._slow= GM_getValue(<span class="string">&quot;slow&quot;</span>) || <span class="number">0.7</span></span><br><span class="line">        <span class="built_in">this</span>._fast= GM_getValue(<span class="string">&quot;fast&quot;</span>) || <span class="number">0.75</span></span><br><span class="line">        <span class="built_in">this</span>._timeout= GM_getValue(<span class="string">&quot;timeout&quot;</span>) || <span class="number">3</span></span><br><span class="line">        <span class="built_in">this</span>._check= GM_getValue(<span class="string">&quot;check&quot;</span>) || <span class="number">2</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;diaoy&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(initData)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> initData)&#123;</span><br><span class="line">        key=key.slice(<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(initData,<span class="string">`<span class="subst">$&#123;key&#125;</span>`</span>,&#123;</span><br><span class="line">            <span class="function"><span class="title">set</span>(<span class="params">newVal</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`setter <span class="subst">$&#123;key&#125;</span>: `</span>,newVal)</span><br><span class="line">                GM_setValue(<span class="string">`<span class="subst">$&#123;key&#125;</span>`</span>,newVal-<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                <span class="built_in">this</span>[<span class="string">`_<span class="subst">$&#123;key&#125;</span>`</span>]=newVal-<span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`getter <span class="subst">$&#123;key&#125;</span>: `</span>,<span class="built_in">this</span>[<span class="string">`_<span class="subst">$&#123;key&#125;</span>`</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>[<span class="string">`_<span class="subst">$&#123;key&#125;</span>`</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(initData)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
